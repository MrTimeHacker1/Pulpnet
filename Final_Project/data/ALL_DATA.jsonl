{"id":"CS201","type":"course","department":"Computer Science and Engineering","title":"Mathematics for Computer Science - I","summary":"Introduces foundational discrete mathematics for computer science, focusing on logic, sets, and combinatorics.","credits":6,"content":{"description":"This course covers fundamental discrete mathematics concepts essential for computer science, including propositional and predicate logic, set theory, functions, relations, and basic combinatorics. It emphasizes proof techniques and problem-solving, preparing students for advanced theoretical courses.","bullets":["Covers propositional and predicate logic","Introduces set theory and combinatorics","Emphasizes proof techniques"],"sections":[{"heading":"Core Topics","text":"Focuses on foundational mathematical concepts used in computer science, with an emphasis on logical reasoning and combinatorial counting.","bullets":["Propositional and predicate logic","Set theory, functions, and relations","Permutations and combinations"]},{"heading":"Applications","text":"Applications include logical foundations for programming, algorithm analysis, and discrete system modeling.","bullets":["Logical reasoning in program verification","Combinatorial analysis in algorithms","Set-based modeling for databases"]}]},"meta":{"keywords":["discrete mathematics","logic","set theory","combinatorics"],"tags":["UG","core course","CSE"]}}
{"id":"CS202","type":"course","department":"Computer Science and Engineering","title":"Mathematics for Computer Science - II","summary":"Continues discrete mathematics with a focus on graph theory, number theory, and probability.","credits":6,"content":{"description":"This course builds on CS201, covering graph theory, basic number theory, and discrete probability. It includes topics like graph properties, modular arithmetic, and probability distributions, with applications in algorithm design and network analysis.","bullets":["Covers graph theory and its properties","Introduces number theory and modular arithmetic","Explores discrete probability"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced discrete mathematics topics, emphasizing their relevance to computer science.","bullets":["Graph theory (paths, cycles, connectivity)","Number theory (divisibility, modular arithmetic)","Discrete probability and random variables"]},{"heading":"Applications","text":"Applications include network design, cryptographic algorithms, and randomized algorithms.","bullets":["Graph algorithms for network analysis","Modular arithmetic in cryptography","Probability in algorithm design"]}]},"meta":{"keywords":["graph theory","number theory","discrete probability"],"tags":["UG","core course","CSE"]}}
{"id":"CS203","type":"course","department":"Computer Science and Engineering","title":"Mathematics for Computer Science - III","summary":"Advanced discrete mathematics with a focus on algebraic structures and advanced combinatorics.","credits":6,"content":{"description":"This course advances the study of discrete mathematics, covering algebraic structures (groups, rings, fields), advanced combinatorics, and their applications in computer science. It emphasizes mathematical rigor and applications in coding theory and algorithm design.","bullets":["Covers algebraic structures like groups and rings","Explores advanced combinatorics","Includes applications in coding theory"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced mathematical structures and their computational applications.","bullets":["Groups, rings, and fields","Advanced combinatorial techniques","Coding theory fundamentals"]},{"heading":"Applications","text":"Applications include error-correcting codes, cryptographic systems, and combinatorial optimization.","bullets":["Error-correcting codes in data transmission","Cryptographic algorithms","Combinatorial optimization problems"]}]},"meta":{"keywords":["algebraic structures","combinatorics","coding theory"],"tags":["UG","core course","CSE"]}}
{"id":"CS220","type":"course","department":"Computer Science and Engineering","title":"Computer Organisation","summary":"Explores the design and architecture of computer systems, including processors, memory, and I/O, with a lab component.","credits":9,"content":{"description":"This course covers the principles of computer organization and architecture, including CPU design, memory hierarchy, instruction set architectures, pipelining, and input/output systems. The lab component provides hands-on experience with assembly language programming and hardware simulation.","bullets":["Covers CPU design and instruction sets","Explores memory hierarchy and pipelining","Includes lab-based assembly programming"],"sections":[{"heading":"Core Topics","text":"Focuses on the internal structure and operation of computer systems, with an emphasis on hardware-software interaction.","bullets":["Instruction set architectures (RISC, CISC)","Memory hierarchy (cache, RAM, virtual memory)","Pipelining and parallel processing"]},{"heading":"Lab Component","text":"The lab involves practical exercises in assembly language programming and hardware simulation to reinforce theoretical concepts.","bullets":["Assembly language programming","Simulation of CPU and memory systems","Performance analysis of hardware designs"]},{"heading":"Applications","text":"Applications include designing efficient computer systems and optimizing software for hardware performance.","bullets":["Processor design for embedded systems","Cache optimization for performance","I/O system design for peripherals"]}]},"meta":{"keywords":["computer organization","architecture","pipelining","memory hierarchy","assembly language"],"tags":["UG","core course","CSE","lab"]}}
{"id":"CS251","type":"course","department":"Computer Science and Engineering","title":"Computing Laboratory - I","summary":"Introduces practical programming skills through hands-on lab exercises in fundamental computing concepts.","credits":6,"content":{"description":"This course provides hands-on experience in programming, focusing on implementing basic algorithms and data structures using languages like C or Python. It emphasizes problem-solving, debugging, and coding practices, serving as a foundation for advanced programming courses.","bullets":["Focuses on programming in C or Python","Covers basic algorithms and data structures","Emphasizes debugging and coding practices"],"sections":[{"heading":"Core Topics","text":"Focuses on practical programming skills through lab-based exercises.","bullets":["Basic programming constructs (loops, conditionals)","Implementation of simple data structures","Debugging and testing techniques"]},{"heading":"Applications","text":"Applications include developing small-scale programs and preparing for advanced computing courses.","bullets":["Simple algorithmic problem-solving","Data structure implementation","Software development basics"]}]},"meta":{"keywords":["programming","algorithms","data structures","lab"],"tags":["UG","core course","CSE","lab"]}}
{"id":"CS252","type":"course","department":"Computer Science and Engineering","title":"Computing Laboratory - II","summary":"Advances programming skills through lab exercises focusing on complex algorithms and data structures.","credits":6,"content":{"description":"This course builds on CS251, focusing on implementing advanced algorithms and data structures (e.g., trees, graphs) in languages like C++ or Java. It emphasizes efficient coding, testing, and debugging for larger-scale problems.","bullets":["Covers advanced data structures like trees and graphs","Focuses on efficient algorithm implementation","Emphasizes testing and debugging"],"sections":[{"heading":"Core Topics","text":"Focuses on implementing complex algorithms and data structures through lab-based exercises.","bullets":["Trees and graph data structures","Advanced sorting and searching algorithms","Performance optimization techniques"]},{"heading":"Applications","text":"Applications include solving complex computational problems and preparing for software development projects.","bullets":["Graph-based problem-solving","Algorithm optimization","Software project development"]}]},"meta":{"keywords":["programming","data structures","algorithms","lab"],"tags":["UG","core course","CSE","lab"]}}
{"id":"CS253","type":"course","department":"Computer Science and Engineering","title":"Software Development and Operations","summary":"Introduces software development methodologies and operational practices, with a lab component.","credits":9,"content":{"description":"This course covers software development methodologies, including agile and DevOps practices, version control, continuous integration, and deployment. The lab component provides hands-on experience with tools like Git, Docker, and CI/CD pipelines, emphasizing practical software engineering skills.","bullets":["Covers agile and DevOps methodologies","Introduces version control and CI/CD pipelines","Includes lab-based tool usage"],"sections":[{"heading":"Core Topics","text":"Focuses on software development and operational practices for building and deploying software systems.","bullets":["Agile development and Scrum","Version control with Git","Continuous integration and deployment"]},{"heading":"Lab Component","text":"The lab involves practical exercises in using software development tools and setting up operational pipelines.","bullets":["Git for version control","Docker for containerization","CI/CD pipeline setup"]},{"heading":"Applications","text":"Applications include building scalable software systems and managing deployment pipelines.","bullets":["Software project management","Automated deployment systems","Scalable application development"]}]},"meta":{"keywords":["software development","DevOps","version control","CI/CD","lab"],"tags":["UG","core course","CSE","lab"]}}
{"id":"CS300","type":"course","department":"Computer Science and Engineering","title":"Computer Science and Engineering Communication Skills","summary":"Develops communication skills for CSE students, focusing on technical writing and presentations.","credits":6,"content":{"description":"This course focuses on developing communication skills for CSE students, covering technical writing, presentation skills, and effective collaboration in team projects. It emphasizes clear documentation and communication of technical concepts.","bullets":["Covers technical writing and documentation","Develops presentation and collaboration skills","Emphasizes clarity in technical communication"],"sections":[{"heading":"Core Topics","text":"Focuses on skills for effective communication in computer science contexts.","bullets":["Technical writing for reports and papers","Presentation skills for technical talks","Team collaboration and communication"]},{"heading":"Applications","text":"Applications include writing research papers, presenting project ideas, and collaborating in software teams.","bullets":["Research paper and documentation writing","Technical presentations","Effective team communication"]}]},"meta":{"keywords":["technical writing","presentation skills","communication"],"tags":["UG","core course","CSE"]}}
{"id":"CS315","type":"course","department":"Computer Science and Engineering","title":"Principles of Database Systems","summary":"Covers the design, implementation, and management of database systems.","credits":9,"content":{"description":"This course introduces the principles of database systems, including relational models, SQL, normalization, indexing, and transaction management. It covers database design, query optimization, and practical implementation using systems like MySQL or PostgreSQL.","bullets":["Covers relational databases and SQL","Explores normalization and indexing","Includes transaction management"],"sections":[{"heading":"Core Topics","text":"Focuses on the theoretical and practical aspects of designing and managing database systems.","bullets":["Relational model and SQL queries","Normalization and database design","Indexing and transaction processing"]},{"heading":"Applications","text":"Applications include building and querying databases for web applications and data management systems.","bullets":["Database design for web applications","Query optimization for performance","Transaction management in distributed systems"]}]},"meta":{"keywords":["database systems","SQL","normalization","indexing","transactions"],"tags":["UG","core course","CSE"]}}
{"id":"CS330","type":"course","department":"Computer Science and Engineering","title":"Operating Systems","summary":"Explores the design and implementation of operating systems, including processes, memory, and file systems.","credits":9,"content":{"description":"This course covers the principles of operating systems, including process management, memory management, file systems, and concurrency. It includes practical implementation of OS concepts using tools like Linux kernel programming.","bullets":["Covers process and memory management","Explores file systems and concurrency","Includes practical OS implementation"],"sections":[{"heading":"Core Topics","text":"Focuses on the design and functionality of operating systems, with an emphasis on system-level programming.","bullets":["Process scheduling and synchronization","Memory management (virtual memory, paging)","File systems and I/O operations"]},{"heading":"Applications","text":"Applications include designing efficient OS components and optimizing system performance.","bullets":["Process management in Linux","Memory optimization for applications","File system design for storage"]}]},"meta":{"keywords":["operating systems","process management","memory management","file systems"],"tags":["UG","core course","CSE"]}}
{"id":"CS335","type":"course","department":"Computer Science and Engineering","title":"Compiler Design","summary":"Covers the theory and practice of designing and implementing compilers for programming languages.","credits":9,"content":{"description":"This course explores the design and implementation of compilers, covering lexical analysis, parsing, semantic analysis, code generation, and optimization. It includes practical projects to build compiler components using tools like LEX and YACC.","bullets":["Covers lexical analysis and parsing","Explores code generation and optimization","Includes practical compiler projects"],"sections":[{"heading":"Core Topics","text":"Focuses on the phases of compiler design and their implementation.","bullets":["Lexical analysis and parsing techniques","Semantic analysis and type checking","Code generation and optimization"]},{"heading":"Applications","text":"Applications include building compilers and optimizing code for programming languages.","bullets":["Compiler construction for new languages","Code optimization for performance","Tool development with LEX and YACC"]}]},"meta":{"keywords":["compiler design","lexical analysis","parsing","code optimization"],"tags":["UG","core course","CSE"]}}
{"id":"CS340","type":"course","department":"Computer Science and Engineering","title":"Theory of Computation","summary":"Introduces formal models of computation, including automata, Turing machines, and computability.","credits":9,"content":{"description":"This course covers formal models of computation, including finite automata, pushdown automata, Turing machines, and computability theory. It explores decidability, undecidability, and complexity classes, with a focus on theoretical foundations of computer science.","bullets":["Covers finite automata and Turing machines","Explores computability and decidability","Includes complexity classes"],"sections":[{"heading":"Core Topics","text":"Focuses on theoretical models of computation and their limits.","bullets":["Finite automata and regular languages","Pushdown automata and context-free languages","Turing machines and decidability"]},{"heading":"Applications","text":"Applications include formal language design and theoretical analysis of computational problems.","bullets":["Parser design for programming languages","Analysis of computational limits","Complexity analysis of algorithms"]}]},"meta":{"keywords":["theory of computation","automata","Turing machines","computability"],"tags":["UG","core course","CSE"]}}
{"id":"CS345","type":"course","department":"Computer Science and Engineering","title":"Algorithms II","summary":"Advanced study of algorithm design and analysis, building on introductory algorithms.","credits":9,"content":{"description":"This course advances the study of algorithms, covering greedy algorithms, divide-and-conquer, dynamic programming, amortized analysis, NP-completeness, and approximation algorithms. It emphasizes advanced problem-solving and applications in real-world domains.","bullets":["Covers advanced algorithmic techniques","Explores NP-completeness and approximation","Includes practical algorithm applications"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced algorithm design and analysis techniques with mathematical rigor.","bullets":["Greedy algorithms and dynamic programming","Amortized analysis","NP-completeness and approximation algorithms"]},{"heading":"Applications","text":"Applications include network optimization, scheduling, and computational problem-solving.","bullets":["Shortest path algorithms","Scheduling and optimization problems","Approximation for NP-hard problems"]}]},"meta":{"keywords":["algorithms","NP-completeness","dynamic programming","approximation algorithms"],"tags":["UG","core course","CSE"]}}
{"id":"CS350","type":"course","department":"Computer Science and Engineering","title":"Principles of Programming Languages","summary":"Explores the design and semantics of programming languages, including functional and object-oriented paradigms.","credits":9,"content":{"description":"This course covers the principles of programming language design, including syntax, semantics, type systems, and paradigms (e.g., functional, object-oriented). It includes practical exploration of languages like Haskell, Java, and Python, focusing on their features and applications.","bullets":["Covers syntax and semantics","Explores functional and object-oriented paradigms","Includes practical language exploration"],"sections":[{"heading":"Core Topics","text":"Focuses on the theoretical and practical aspects of programming language design.","bullets":["Syntax and semantics of languages","Type systems and type checking","Functional and object-oriented programming"]},{"heading":"Applications","text":"Applications include designing domain-specific languages and understanding language implementations.","bullets":["Functional programming in Haskell","Object-oriented design in Java","Scripting with Python"]}]},"meta":{"keywords":["programming languages","functional programming","object-oriented programming","type systems"],"tags":["UG","core course","CSE"]}}
{"id":"CS360","type":"course","department":"Computer Science and Engineering","title":"Introduction to Computer Graphics","summary":"Introduces the fundamentals of computer graphics, including rendering, modeling, and animation.","credits":9,"content":{"description":"This course covers the basics of computer graphics, including 2D/3D rendering, geometric transformations, shading, and animation. It includes practical projects using tools like OpenGL to implement graphics algorithms.","bullets":["Covers 2D and 3D rendering","Explores geometric transformations and shading","Includes practical graphics projects"],"sections":[{"heading":"Core Topics","text":"Focuses on the theoretical and practical aspects of computer graphics.","bullets":["2D and 3D geometric transformations","Rendering pipelines and shading","Basic animation techniques"]},{"heading":"Applications","text":"Applications include game development, visualization, and computer-aided design.","bullets":["Game rendering with OpenGL","Scientific visualization","Animation for multimedia"]}]},"meta":{"keywords":["computer graphics","rendering","shading","animation","OpenGL"],"tags":["UG","elective","CSE"]}}
{"id":"CS365","type":"course","department":"Computer Science and Engineering","title":"Artificial Intelligence","summary":"Introduces core concepts of artificial intelligence, including search, knowledge representation, and machine learning.","credits":9,"content":{"description":"This course introduces artificial intelligence, covering search algorithms, knowledge representation, reasoning, and introductory machine learning. It includes practical implementations of AI techniques in areas like games and expert systems.","bullets":["Covers search and knowledge representation","Introduces machine learning basics","Includes practical AI implementations"],"sections":[{"heading":"Core Topics","text":"Focuses on foundational AI techniques and their theoretical underpinnings.","bullets":["Search algorithms (A*, heuristic search)","Knowledge representation and reasoning","Introduction to machine learning"]},{"heading":"Applications","text":"Applications include AI for games, expert systems, and decision-making systems.","bullets":["Game playing with AI","Expert system design","Basic ML applications"]}]},"meta":{"keywords":["artificial intelligence","search algorithms","knowledge representation","machine learning"],"tags":["UG","elective","CSE","ML/AI"]}}
{"id":"CS395","type":"course","department":"Computer Science and Engineering","title":"Undergraduate Project - I (UGP-1)","summary":"First part of a year-long undergraduate research or development project in CSE.","credits":6,"content":{"description":"This course involves independent or team-based research or development projects under faculty supervision, focusing on applying CSE concepts to practical problems. Students define a problem, conduct preliminary research, and develop initial solutions.","bullets":["Involves independent or team-based projects","Focuses on applying CSE concepts","Supervised by faculty"],"sections":[{"heading":"Core Activities","text":"Focuses on defining and starting a project in computer science, with an emphasis on research or development.","bullets":["Problem definition and literature review","Initial design and implementation","Project planning and milestones"]},{"heading":"Applications","text":"Applications vary based on project topics, including software development, algorithm design, or system analysis.","bullets":["Software prototype development","Algorithm implementation","System performance analysis"]}]},"meta":{"keywords":["undergraduate project","research","development"],"tags":["UG","project","CSE"]}}
{"id":"CS396","type":"course","department":"Computer Science and Engineering","title":"Undergraduate Project - II (UGP-2)","summary":"Continuation of UGP-1, focusing on implementation and evaluation of the project.","credits":6,"content":{"description":"This course continues UGP-1, focusing on implementing, testing, and evaluating the project defined in the first part. Students refine solutions, conduct experiments, and prepare a final report under faculty supervision.","bullets":["Continues UGP-1 project","Focuses on implementation and evaluation","Includes final report preparation"],"sections":[{"heading":"Core Activities","text":"Focuses on completing the project, with an emphasis on implementation and evaluation.","bullets":["Implementation of proposed solutions","Testing and performance evaluation","Report writing and presentation"]},{"heading":"Applications","text":"Applications depend on project scope, including software systems, algorithms, or theoretical studies.","bullets":["Software system deployment","Algorithm performance analysis","Theoretical result validation"]}]},"meta":{"keywords":["undergraduate project","implementation","evaluation"],"tags":["UG","project","CSE"]}}
{"id":"CS397","type":"course","department":"Computer Science and Engineering","title":"Special Topics in Computer Science","summary":"Explores emerging or specialized topics in computer science, varying by semester.","credits":9,"content":{"description":"This course covers emerging or specialized topics in computer science, tailored to current research or industry trends. Topics vary by semester and instructor, potentially including areas like blockchain, quantum computing, or advanced AI techniques.","bullets":["Covers emerging CSE topics","Varies by semester and instructor","Focuses on research or industry trends"],"sections":[{"heading":"Core Topics","text":"Focuses on specialized or cutting-edge areas in computer science, based on instructor expertise.","bullets":["Emerging technologies (e.g., blockchain, AI)","Advanced research topics","Industry-relevant applications"]},{"heading":"Applications","text":"Applications depend on the semester’s focus, including research prototypes or industry solutions.","bullets":["Prototype development for new technologies","Research in specialized CSE areas","Industry case studies"]}]},"meta":{"keywords":["special topics","emerging technologies","research"],"tags":["UG","elective","CSE"]}}
{"id":"CS422","type":"course","department":"Computer Science and Engineering","title":"Computer Architecture","summary":"Advanced study of computer architecture, focusing on processor design and performance optimization.","credits":9,"content":{"description":"This course advances the study of computer architecture, covering advanced processor design, memory systems, and performance optimization techniques. It includes topics like superscalar processors, cache coherence, and parallel architectures.","bullets":["Covers advanced processor design","Explores cache coherence and memory systems","Includes performance optimization"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced architectural concepts and their implementation.","bullets":["Superscalar and out-of-order execution","Cache coherence and memory consistency","Parallel and multicore architectures"]},{"heading":"Applications","text":"Applications include designing high-performance computing systems and optimizing software for hardware.","bullets":["High-performance processor design","Parallel computing systems","Software optimization for architecture"]}]},"meta":{"keywords":["computer architecture","processor design","cache coherence","parallel architectures"],"tags":["UG","elective","CSE"]}}
{"id":"CS423","type":"course","department":"Computer Science and Engineering","title":"Multi-core and Multiprocessor Architecture","summary":"Explores the design and optimization of multi-core and multiprocessor systems.","credits":9,"content":{"description":"This course focuses on multi-core and multiprocessor architectures, covering parallel processing, cache coherence, interconnection networks, and performance optimization. It includes practical exercises in programming for multi-core systems.","bullets":["Covers multi-core and multiprocessor design","Explores cache coherence and interconnection","Includes parallel programming exercises"],"sections":[{"heading":"Core Topics","text":"Focuses on the design and operation of multi-core and multiprocessor systems.","bullets":["Multi-core processor design","Cache coherence protocols","Interconnection networks"]},{"heading":"Applications","text":"Applications include high-performance computing and parallel software development.","bullets":["Parallel algorithm implementation","Performance optimization for multi-core","High-performance computing systems"]}]},"meta":{"keywords":["multi-core","multiprocessor","cache coherence","parallel processing"],"tags":["UG","elective","CSE"]}}
{"id":"CS425","type":"course","department":"Computer Science and Engineering","title":"Computer Networks","summary":"Covers the principles and protocols of computer networks, including TCP/IP and network security.","credits":9,"content":{"description":"This course introduces computer networks, covering network architectures, protocols (e.g., TCP/IP, HTTP), routing, and security. It includes practical exercises in network programming and configuration.","bullets":["Covers network architectures and protocols","Explores routing and network security","Includes network programming exercises"],"sections":[{"heading":"Core Topics","text":"Focuses on the design and operation of computer networks, with an emphasis on protocols and security.","bullets":["Network layers and TCP/IP","Routing algorithms and protocols","Network security and encryption"]},{"heading":"Applications","text":"Applications include designing and securing network systems for various domains.","bullets":["Network configuration for web services","Secure communication protocols","Routing optimization"]}]},"meta":{"keywords":["computer networks","TCP/IP","routing","network security"],"tags":["UG","core course","CSE"]}}
{"id":"CS433","type":"course","department":"Computer Science and Engineering","title":"Parallel Programming","summary":"Introduces parallel programming techniques for multi-core and distributed systems.","credits":9,"content":{"description":"This course covers parallel programming paradigms, including shared-memory and distributed-memory models, using tools like OpenMP and MPI. It emphasizes designing and optimizing parallel algorithms for performance.","bullets":["Covers shared-memory and distributed-memory models","Explores OpenMP and MPI programming","Focuses on parallel algorithm optimization"],"sections":[{"heading":"Core Topics","text":"Focuses on techniques for programming parallel systems and optimizing performance.","bullets":["Shared-memory programming with OpenMP","Distributed-memory programming with MPI","Parallel algorithm design"]},{"heading":"Applications","text":"Applications include high-performance computing and parallel data processing.","bullets":["Parallel scientific computing","Data processing in distributed systems","Performance optimization for parallel tasks"]}]},"meta":{"keywords":["parallel programming","OpenMP","MPI","parallel algorithms"],"tags":["UG","elective","CSE"]}}
{"id":"CS455","type":"course","department":"Computer Science and Engineering","title":"Introduction to Software Engineering","summary":"Covers software engineering principles, including design, testing, and project management.","credits":9,"content":{"description":"This course introduces software engineering principles, covering software development life cycles, design patterns, testing methodologies, and project management. It includes practical projects to apply these concepts in real-world scenarios.","bullets":["Covers software development life cycles","Explores design patterns and testing","Includes project management and practical projects"],"sections":[{"heading":"Core Topics","text":"Focuses on the principles and practices of software engineering.","bullets":["Software development life cycles (e.g., Agile, Waterfall)","Design patterns and modular design","Testing methodologies (unit, integration)"]},{"heading":"Applications","text":"Applications include developing robust software systems and managing software projects.","bullets":["Software system design","Testing and quality assurance","Project planning and management"]}]},"meta":{"keywords":["software engineering","design patterns","testing","project management"],"tags":["UG","elective","CSE"]}}
{"id":"CS496","type":"course","department":"Computer Science and Engineering","title":"Undergraduate Project - I (UGP-1) (>=Y22)","summary":"First part of a year-long undergraduate project for students starting from Y22 batch.","credits":6,"content":{"description":"This course, for students starting from the Y22 batch, involves independent or team-based research or development projects under faculty supervision. Students define a problem, conduct preliminary research, and develop initial solutions in computer science.","bullets":["Involves independent or team-based projects","Focuses on problem definition and initial solutions","Supervised by faculty"],"sections":[{"heading":"Core Activities","text":"Focuses on initiating a project, with an emphasis on research or development.","bullets":["Problem definition and literature review","Initial design and implementation","Project planning and milestones"]},{"heading":"Applications","text":"Applications vary based on project topics, including software development, algorithms, or systems.","bullets":["Software prototype development","Algorithm design and testing","System analysis and optimization"]}]},"meta":{"keywords":["undergraduate project","research","development"],"tags":["UG","project","CSE"]}}
{"id":"CS497","type":"course","department":"Computer Science and Engineering","title":"Undergraduate Project - II (UGP-2) (>=Y22)","summary":"Continuation of UGP-1 for Y22 batch, focusing on project implementation and evaluation.","credits":6,"content":{"description":"This course continues UGP-1 for students starting from the Y22 batch, focusing on implementing, testing, and evaluating the project. Students refine solutions, conduct experiments, and prepare a final report under faculty supervision.","bullets":["Continues UGP-1 project","Focuses on implementation and evaluation","Includes final report preparation"],"sections":[{"heading":"Core Activities","text":"Focuses on completing the project, with an emphasis on implementation and evaluation.","bullets":["Implementation of proposed solutions","Testing and performance evaluation","Report writing and presentation"]},{"heading":"Applications","text":"Applications depend on project scope, including software systems, algorithms, or theoretical studies.","bullets":["Software system deployment","Algorithm performance analysis","Theoretical result validation"]}]},"meta":{"keywords":["undergraduate project","implementation","evaluation"],"tags":["UG","project","CSE"]}}
{"id":"CS498","type":"course","department":"Computer Science and Engineering","title":"Undergraduate Project - III (UGP-3)","summary":"Third part of an extended undergraduate project, focusing on advanced development and analysis.","credits":6,"content":{"description":"This course extends the undergraduate project sequence, focusing on advanced development, analysis, and refinement of the project. Students work on complex aspects of their project, integrating advanced techniques under faculty supervision.","bullets":["Extends UGP-1 and UGP-2","Focuses on advanced development and analysis","Supervised by faculty"],"sections":[{"heading":"Core Activities","text":"Focuses on advanced project development and in-depth analysis.","bullets":["Advanced implementation techniques","In-depth performance analysis","Integration of complex solutions"]},{"heading":"Applications","text":"Applications include advanced software systems, algorithmic research, or system optimization.","bullets":["Complex software system development","Advanced algorithm implementation","System performance optimization"]}]},"meta":{"keywords":["undergraduate project","advanced development","analysis"],"tags":["UG","project","CSE"]}}
{"id":"CS499","type":"course","department":"Computer Science and Engineering","title":"Undergraduate Project - IV (UGP-4)","summary":"Final part of the undergraduate project sequence, focusing on project completion and presentation.","credits":6,"content":{"description":"This course concludes the undergraduate project sequence, focusing on finalizing the project, conducting comprehensive evaluations, and presenting results. Students prepare a detailed report and presentation under faculty supervision.","bullets":["Concludes UGP sequence","Focuses on project completion and presentation","Includes comprehensive evaluation"],"sections":[{"heading":"Core Activities","text":"Focuses on finalizing the project and presenting results.","bullets":["Final implementation and testing","Comprehensive project evaluation","Report and presentation preparation"]},{"heading":"Applications","text":"Applications include finalized software systems, research outcomes, or system optimizations.","bullets":["Final software system deployment","Research result presentation","System optimization outcomes"]}]},"meta":{"keywords":["undergraduate project","completion","presentation"],"tags":["UG","project","CSE"]}}
{"id":"CS601","type":"course","department":"Computer Science and Engineering","title":"Mathematics for Computer Science","summary":"Advanced mathematical foundations for computer science, tailored for postgraduate students.","credits":9,"content":{"description":"This course provides advanced mathematical foundations for postgraduate computer science studies, covering topics like advanced graph theory, linear algebra, probability, and combinatorics, with applications in algorithms and theoretical computer science.","bullets":["Covers advanced graph theory and linear algebra","Explores probability and combinatorics","Tailored for postgraduate research"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced mathematical concepts relevant to computer science research.","bullets":["Advanced graph theory","Linear algebra for algorithms","Probability and combinatorial optimization"]},{"heading":"Applications","text":"Applications include algorithm design, machine learning, and theoretical computer science.","bullets":["Graph algorithms for optimization","Linear algebra in machine learning","Combinatorial analysis in research"]}]},"meta":{"keywords":["graph theory","linear algebra","probability","combinatorics"],"tags":["PG","core course","CSE"]}}
{"id":"CS602","type":"course","department":"Computer Science and Engineering","title":"Design and Analysis of Algorithms","summary":"Advanced study of algorithm design and analysis for postgraduate students.","credits":9,"content":{"description":"This course covers advanced algorithm design techniques, including dynamic programming, greedy algorithms, approximation algorithms, and randomized algorithms. It emphasizes rigorous analysis and applications in complex computational problems.","bullets":["Covers advanced algorithmic techniques","Explores approximation and randomized algorithms","Emphasizes rigorous analysis"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced algorithm design and analysis for postgraduate research.","bullets":["Dynamic programming and greedy algorithms","Approximation algorithms for NP-hard problems","Randomized algorithms and analysis"]},{"heading":"Applications","text":"Applications include optimization, network design, and computational biology.","bullets":["Network optimization algorithms","Approximation in scheduling","Randomized algorithms in bioinformatics"]}]},"meta":{"keywords":["algorithms","dynamic programming","approximation algorithms","randomized algorithms"],"tags":["PG","core course","CSE"]}}
{"id":"CS603","type":"course","department":"Computer Science and Engineering","title":"Fundamentals of Theoretical Computer Science","summary":"Covers foundational concepts in theoretical computer science, including automata and complexity.","credits":9,"content":{"description":"This course provides a comprehensive introduction to theoretical computer science, covering automata theory, computability, and complexity theory. It includes finite automata, Turing machines, and complexity classes like P and NP, tailored for postgraduate students.","bullets":["Covers automata and computability","Explores complexity classes","Tailored for postgraduate research"],"sections":[{"heading":"Core Topics","text":"Focuses on foundational theoretical concepts and their implications.","bullets":["Finite automata and regular languages","Turing machines and computability","Complexity classes (P, NP, PSPACE)"]},{"heading":"Applications","text":"Applications include formal language design and computational complexity analysis.","bullets":["Parser design for compilers","Complexity analysis of algorithms","Theoretical modeling of computation"]}]},"meta":{"keywords":["theoretical computer science","automata","computability","complexity"],"tags":["PG","core course","CSE"]}}
{"id":"CS610","type":"course","department":"Computer Science and Engineering","title":"Programming for Performance","summary":"Focuses on techniques for optimizing program performance in high-performance computing.","credits":9,"content":{"description":"This course explores techniques for optimizing program performance, including profiling, parallelization, and memory optimization. It covers tools and methodologies for high-performance computing, with practical applications in software development.","bullets":["Covers profiling and optimization techniques","Explores parallelization for performance","Includes memory optimization"],"sections":[{"heading":"Core Topics","text":"Focuses on methods to enhance program efficiency and performance.","bullets":["Profiling and performance analysis","Parallel programming techniques","Memory hierarchy optimization"]},{"heading":"Applications","text":"Applications include optimizing software for scientific computing and large-scale systems.","bullets":["High-performance scientific computing","Optimization for distributed systems","Efficient software deployment"]}]},"meta":{"keywords":["performance optimization","profiling","parallel programming","memory optimization"],"tags":["PG","elective","CSE"]}}
{"id":"CS614","type":"course","department":"Computer Science and Engineering","title":"Linux Kernel Programming","summary":"Covers the design and implementation of Linux kernel modules and drivers.","credits":9,"content":{"description":"This course focuses on Linux kernel programming, covering kernel architecture, module development, device drivers, and system calls. It includes practical exercises in writing and debugging kernel code.","bullets":["Covers Linux kernel architecture","Explores module and driver development","Includes kernel programming exercises"],"sections":[{"heading":"Core Topics","text":"Focuses on the design and programming of Linux kernel components.","bullets":["Kernel architecture and system calls","Module development and debugging","Device driver implementation"]},{"heading":"Applications","text":"Applications include developing custom kernel modules and optimizing system performance.","bullets":["Custom kernel module development","Device driver programming","System performance optimization"]}]},"meta":{"keywords":["Linux kernel","module development","device drivers","system calls"],"tags":["PG","elective","CSE"]}}
{"id":"CS615","type":"course","department":"Computer Science and Engineering","title":"Skyline Queries in Database","summary":"Explores skyline query processing in databases for multi-criteria decision-making.","credits":9,"content":{"description":"This course covers skyline queries, which identify optimal data points based on multiple criteria in databases. It includes algorithms for skyline computation, indexing techniques, and applications in decision support systems.","bullets":["Covers skyline query algorithms","Explores indexing for skyline queries","Includes applications in decision-making"],"sections":[{"heading":"Core Topics","text":"Focuses on the theory and implementation of skyline query processing.","bullets":["Skyline query algorithms (e.g., block-nested loop)","Indexing for efficient skyline computation","Multi-criteria optimization"]},{"heading":"Applications","text":"Applications include decision support systems and data analysis in large databases.","bullets":["Decision-making in business intelligence","Data analysis in recommendation systems","Multi-objective query optimization"]}]},"meta":{"keywords":["skyline queries","databases","multi-criteria optimization"],"tags":["PG","elective","CSE"]}}
{"id":"CS616","type":"course","department":"Computer Science and Engineering","title":"Human Centered Computing","summary":"Explores user-centered design and evaluation of computing systems.","credits":9,"content":{"description":"This course focuses on human-centered computing, covering user interface design, usability evaluation, and human-computer interaction principles. It includes practical projects in designing user-friendly systems.","bullets":["Covers user interface design","Explores usability evaluation techniques","Includes HCI project work"],"sections":[{"heading":"Core Topics","text":"Focuses on designing and evaluating computing systems with a user-centric approach.","bullets":["User interface design principles","Usability testing and evaluation","Human-computer interaction frameworks"]},{"heading":"Applications","text":"Applications include designing intuitive software interfaces and improving user experiences.","bullets":["User-friendly software design","Usability testing for applications","HCI in mobile and web systems"]}]},"meta":{"keywords":["human-centered computing","user interface","usability","HCI"],"tags":["PG","elective","CSE"]}}
{"id":"CS617","type":"course","department":"Computer Science and Engineering","title":"Database Queries","summary":"Covers advanced database query processing and optimization techniques.","credits":9,"content":{"description":"This course explores advanced database query processing, including query optimization, indexing, and distributed query execution. It covers SQL extensions, query rewriting, and performance tuning in modern database systems.","bullets":["Covers query optimization techniques","Explores indexing and distributed queries","Includes SQL extensions and tuning"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced techniques for efficient query processing in databases.","bullets":["Query optimization and execution plans","Indexing techniques for performance","Distributed query processing"]},{"heading":"Applications","text":"Applications include optimizing large-scale database systems and data analytics platforms.","bullets":["Query optimization for big data","Distributed database systems","Performance tuning for analytics"]}]},"meta":{"keywords":["database queries","query optimization","indexing","distributed databases"],"tags":["PG","elective","CSE"]}}
{"id":"CS618","type":"course","department":"Computer Science and Engineering","title":"Indexing and Searching Techniques in Databases","summary":"Focuses on indexing and searching methods for efficient database query execution.","credits":9,"content":{"description":"This course covers advanced indexing and searching techniques in databases, including B-trees, hash indexes, and full-text search. It explores methods for optimizing query performance in large-scale database systems.","bullets":["Covers B-trees and hash indexes","Explores full-text search techniques","Focuses on query performance optimization"],"sections":[{"heading":"Core Topics","text":"Focuses on indexing and searching methods to enhance database performance.","bullets":["B-trees and hash-based indexing","Full-text search algorithms","Query performance optimization"]},{"heading":"Applications","text":"Applications include search engines, database optimization, and data retrieval systems.","bullets":["Search engine indexing","Database query optimization","Efficient data retrieval"]}]},"meta":{"keywords":["indexing","searching","databases","B-trees","full-text search"],"tags":["PG","elective","CSE"]}}
{"id":"CS619","type":"course","department":"Computer Science and Engineering","title":"Advances in DBMS","summary":"Explores advanced topics in database management systems, including distributed and NoSQL databases.","credits":9,"content":{"description":"This course covers advanced topics in database management systems, including distributed databases, NoSQL databases, and big data management. It explores scalability, consistency, and performance optimization in modern database systems.","bullets":["Covers distributed and NoSQL databases","Explores scalability and consistency","Includes big data management"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced database technologies and their implementation.","bullets":["Distributed database architectures","NoSQL databases (e.g., MongoDB, Cassandra)","Big data management and scalability"]},{"heading":"Applications","text":"Applications include large-scale data analytics and cloud-based database systems.","bullets":["Big data analytics platforms","Cloud database management","Scalable data storage solutions"]}]},"meta":{"keywords":["DBMS","distributed databases","NoSQL","big data"],"tags":["PG","elective","CSE"]}}
{"id":"CS621","type":"course","department":"Computer Science and Engineering","title":"Topics in Contemporary Microarchitecture","summary":"Explores modern microarchitecture designs and their performance implications.","credits":9,"content":{"description":"This course covers contemporary microarchitecture topics, including advanced processor designs, speculative execution, and energy-efficient architectures. It focuses on recent advancements and their impact on system performance.","bullets":["Covers advanced processor designs","Explores speculative execution","Includes energy-efficient architectures"],"sections":[{"heading":"Core Topics","text":"Focuses on cutting-edge microarchitecture designs and their performance characteristics.","bullets":["Speculative execution and branch prediction","Energy-efficient processor designs","Advanced cache and memory systems"]},{"heading":"Applications","text":"Applications include high-performance and low-power computing systems.","bullets":["High-performance processor design","Energy-efficient embedded systems","Cache optimization for performance"]}]},"meta":{"keywords":["microarchitecture","processor design","speculative execution","energy efficiency"],"tags":["PG","elective","CSE"]}}
{"id":"CS622","type":"course","department":"Computer Science and Engineering","title":"Advanced Computer Architecture","summary":"Advanced study of computer architecture, focusing on high-performance and parallel systems.","credits":9,"content":{"description":"This course delves into advanced computer architecture topics, including parallel architectures, GPU architectures, and memory system optimizations. It emphasizes designing and analyzing high-performance computing systems.","bullets":["Covers parallel and GPU architectures","Explores memory system optimizations","Focuses on high-performance computing"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced architectural designs for high-performance systems.","bullets":["Parallel architectures and multiprocessing","GPU architecture and CUDA programming","Advanced memory system design"]},{"heading":"Applications","text":"Applications include designing high-performance computing systems and GPU-based applications.","bullets":["High-performance computing clusters","GPU-based machine learning","Memory optimization for big data"]}]},"meta":{"keywords":["computer architecture","parallel architectures","GPU","memory systems"],"tags":["PG","elective","CSE"]}}
{"id":"CS623","type":"course","department":"Computer Science and Engineering","title":"VLSI Design for Parallel Architectures","summary":"Covers VLSI design techniques for implementing parallel architectures.","credits":9,"content":{"description":"This course explores VLSI design for parallel architectures, focusing on hardware implementation of parallel processing units, memory systems, and interconnection networks. It includes practical design projects using VLSI tools.","bullets":["Covers VLSI design for parallel systems","Explores memory and interconnection networks","Includes practical VLSI design projects"],"sections":[{"heading":"Core Topics","text":"Focuses on designing VLSI circuits for parallel computing systems.","bullets":["VLSI design for parallel processors","Memory system design in VLSI","Interconnection network implementation"]},{"heading":"Applications","text":"Applications include designing parallel computing hardware and optimizing VLSI systems.","bullets":["Parallel processor chip design","High-performance VLSI systems","Interconnection for parallel architectures"]}]},"meta":{"keywords":["VLSI design","parallel architectures","hardware design"],"tags":["PG","elective","CSE"]}}
{"id":"CS624","type":"course","department":"Computer Science and Engineering","title":"Topics in Embedded Systems","summary":"Explores advanced topics in embedded systems design and implementation.","credits":9,"content":{"description":"This course covers advanced topics in embedded systems, including real-time systems, low-power design, and embedded software development. It includes practical projects in designing and programming embedded systems.","bullets":["Covers real-time embedded systems","Explores low-power design","Includes embedded software development"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced techniques for designing and programming embedded systems.","bullets":["Real-time system design","Low-power embedded architectures","Embedded software programming"]},{"heading":"Applications","text":"Applications include IoT devices, automotive systems, and embedded control systems.","bullets":["IoT device development","Automotive embedded systems","Real-time control applications"]}]},"meta":{"keywords":["embedded systems","real-time systems","low-power design"],"tags":["PG","elective","CSE"]}}
{"id":"CS625","type":"course","department":"Computer Science and Engineering","title":"Advanced Computer Networks","summary":"Advanced study of computer networks, focusing on modern protocols and network management.","credits":9,"content":{"description":"This course explores advanced topics in computer networks, including modern protocols, network virtualization, and software-defined networking (SDN). It covers network management, security, and performance optimization.","bullets":["Covers modern network protocols","Explores network virtualization and SDN","Includes network management and security"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced network architectures and management techniques.","bullets":["Modern protocols (e.g., HTTP/2, QUIC)","Network virtualization and SDN","Network security and management"]},{"heading":"Applications","text":"Applications include designing scalable and secure network systems.","bullets":["Software-defined network implementation","Secure network protocols","Network performance optimization"]}]},"meta":{"keywords":["computer networks","SDN","network security","modern protocols"],"tags":["PG","elective","CSE"]}}
{"id":"CS626","type":"course","department":"Computer Science and Engineering","title":"Fault Tolerant Computing Systems","summary":"Covers techniques for designing fault-tolerant computing systems.","credits":9,"content":{"description":"This course explores fault tolerance in computing systems, covering redundancy, error detection, and recovery mechanisms. It includes techniques for designing reliable systems in hardware and software.","bullets":["Covers redundancy and error detection","Explores recovery mechanisms","Includes fault-tolerant system design"],"sections":[{"heading":"Core Topics","text":"Focuses on techniques for building reliable computing systems.","bullets":["Redundancy and fault tolerance","Error detection and correction","Recovery mechanisms in systems"]},{"heading":"Applications","text":"Applications include designing reliable distributed systems and critical infrastructure.","bullets":["Fault-tolerant distributed systems","Reliable cloud computing","Critical system reliability"]}]},"meta":{"keywords":["fault tolerance","redundancy","error detection","recovery"],"tags":["PG","elective","CSE"]}}
{"id":"CS627","type":"course","department":"Computer Science and Engineering","title":"E-commerce","summary":"Explores the design and implementation of e-commerce systems and technologies.","credits":9,"content":{"description":"This course covers the design and implementation of e-commerce systems, including web architectures, payment systems, and security protocols. It includes practical projects in building e-commerce platforms.","bullets":["Covers e-commerce web architectures","Explores payment systems and security","Includes practical e-commerce projects"],"sections":[{"heading":"Core Topics","text":"Focuses on the technologies and architectures for e-commerce systems.","bullets":["Web architectures for e-commerce","Payment gateway integration","Security protocols for transactions"]},{"heading":"Applications","text":"Applications include building secure and scalable e-commerce platforms.","bullets":["Online marketplace development","Secure payment systems","Scalable e-commerce architectures"]}]},"meta":{"keywords":["e-commerce","web architectures","payment systems","security"],"tags":["PG","elective","CSE"]}}
{"id":"CS628","type":"course","department":"Computer Science and Engineering","title":"Computer Systems Security","summary":"Covers security mechanisms and threats in computer systems, including software and hardware vulnerabilities.","credits":9,"content":{"description":"This course examines security in computer systems, covering software vulnerabilities (e.g., buffer overflows), hardware security, and system-level defenses. It includes practical exercises in securing systems and analyzing threats.","bullets":["Covers software and hardware vulnerabilities","Explores system-level security mechanisms","Includes practical security exercises"],"sections":[{"heading":"Core Topics","text":"Focuses on identifying and mitigating security threats in computer systems.","bullets":["Software vulnerabilities (e.g., buffer overflows)","Hardware security mechanisms","System-level defense strategies"]},{"heading":"Applications","text":"Applications include securing operating systems, applications, and hardware platforms.","bullets":["Operating system security","Application security hardening","Hardware-based security solutions"]}]},"meta":{"keywords":["system security","software vulnerabilities","hardware security"],"tags":["PG","elective","CSE"]}}
{"id":"CS629","type":"course","department":"Computer Science and Engineering","title":"Parallel Execution of Programs","summary":"Explores techniques for parallel program execution on modern architectures.","credits":9,"content":{"description":"This course covers techniques for parallel program execution, including parallelization strategies, synchronization, and performance optimization on multi-core and distributed systems. It includes practical parallel programming projects.","bullets":["Covers parallelization strategies","Explores synchronization techniques","Includes parallel programming projects"],"sections":[{"heading":"Core Topics","text":"Focuses on methods for executing programs in parallel on modern architectures.","bullets":["Parallelization strategies for multi-core","Synchronization and deadlock avoidance","Performance optimization for parallel execution"]},{"heading":"Applications","text":"Applications include parallel computing in scientific simulations and data processing.","bullets":["Parallel scientific computing","Data processing in distributed systems","Optimization for parallel architectures"]}]},"meta":{"keywords":["parallel execution","synchronization","multi-core programming"],"tags":["PG","elective","CSE"]}}
{"id":"CS630","type":"course","department":"Computer Science and Engineering","title":"Advanced Operating Systems For Embedded Systems, Pervasive Computing and Internet Of Things","summary":"Covers advanced operating system concepts for embedded systems, pervasive computing, and IoT.","credits":9,"content":{"description":"This course explores advanced operating system concepts tailored for embedded systems, pervasive computing, and IoT. It covers real-time OS, lightweight kernels, and IoT-specific OS designs, with practical projects in system development.","bullets":["Covers real-time operating systems","Explores lightweight kernels for IoT","Includes practical OS projects"],"sections":[{"heading":"Core Topics","text":"Focuses on OS designs for resource-constrained and pervasive computing environments.","bullets":["Real-time operating systems","Lightweight kernels for IoT","OS design for pervasive computing"]},{"heading":"Applications","text":"Applications include IoT devices, automotive systems, and pervasive computing environments.","bullets":["IoT device OS development","Automotive system software","Pervasive computing applications"]}]},"meta":{"keywords":["operating systems","embedded systems","IoT","real-time systems"],"tags":["PG","elective","CSE"]}}
{"id":"CS631","type":"course","department":"Computer Science and Engineering","title":"Cyber security of critical infrastructure","summary":"Focuses on securing critical infrastructure systems against cyber threats.","credits":9,"content":{"description":"This course examines cybersecurity for critical infrastructure, covering threat models, vulnerability analysis, and defense mechanisms for systems like power grids and transportation networks. It includes practical exercises in securing infrastructure systems.","bullets":["Covers threat models for critical infrastructure","Explores vulnerability analysis and defenses","Includes practical security exercises"],"sections":[{"heading":"Core Topics","text":"Focuses on identifying and mitigating cyber threats to critical infrastructure.","bullets":["Threat modeling for infrastructure systems","Vulnerability analysis techniques","Defense mechanisms for critical systems"]},{"heading":"Applications","text":"Applications include securing power grids, transportation, and other critical systems.","bullets":["Power grid cybersecurity","Transportation network security","Real-time threat mitigation"]}]},"meta":{"keywords":["cybersecurity","critical infrastructure","threat modeling","vulnerability analysis"],"tags":["PG","elective","CSE"]}}
{"id":"CS632","type":"course","department":"Computer Science and Engineering","title":"Topics in Distributed Systems","summary":"Explores advanced topics in distributed systems, including consistency and fault tolerance.","credits":9,"content":{"description":"This course covers advanced topics in distributed systems, including distributed consensus, fault tolerance, and scalability. It includes practical projects in designing and implementing distributed system components.","bullets":["Covers distributed consensus and fault tolerance","Explores scalability in distributed systems","Includes practical distributed system projects"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced concepts in designing and managing distributed systems.","bullets":["Distributed consensus algorithms (e.g., Paxos)","Fault tolerance in distributed systems","Scalability and load balancing"]},{"heading":"Applications","text":"Applications include cloud computing, distributed databases, and large-scale systems.","bullets":["Cloud-based distributed systems","Distributed database management","Scalable system architectures"]}]},"meta":{"keywords":["distributed systems","consensus","fault tolerance","scalability"],"tags":["PG","elective","CSE"]}}
{"id":"CS633","type":"course","department":"Computer Science and Engineering","title":"Parallel Computing","summary":"Covers principles and techniques of parallel computing systems and algorithms.","credits":9,"content":{"description":"This course explores parallel computing, including parallel architectures, programming models, and algorithm design. It emphasizes efficient parallelization techniques for high-performance computing.","bullets":["Covers parallel architectures","Explores parallel programming models","Includes parallel algorithm design"],"sections":[{"heading":"Core Topics","text":"Focuses on the design and implementation of parallel computing systems.","bullets":["Parallel architectures (e.g., shared-memory, distributed-memory)","Parallel programming models (e.g., MPI, OpenMP)","Parallel algorithm design and analysis"]},{"heading":"Applications","text":"Applications include scientific computing, data processing, and machine learning.","bullets":["High-performance scientific simulations","Parallel data processing","Parallel machine learning algorithms"]}]},"meta":{"keywords":["parallel computing","parallel architectures","parallel algorithms"],"tags":["PG","elective","CSE"]}}
{"id":"CS634","type":"course","department":"Computer Science and Engineering","title":"Mobile Computing","summary":"Explores the principles and technologies of mobile computing systems and applications.","credits":9,"content":{"description":"This course covers the fundamentals of mobile computing, including mobile architectures, wireless communication protocols, mobile app development, and energy-efficient design. It includes practical projects in developing mobile applications.","bullets":["Covers mobile architectures and protocols","Explores mobile app development","Includes energy-efficient design"],"sections":[{"heading":"Core Topics","text":"Focuses on the design and implementation of mobile computing systems.","bullets":["Mobile architectures and operating systems","Wireless communication protocols (e.g., Wi-Fi, Bluetooth)","Mobile application development frameworks"]},{"heading":"Applications","text":"Applications include mobile apps, IoT integration, and location-based services.","bullets":["Mobile app development for Android/iOS","IoT and mobile integration","Location-based services and sensors"]}]},"meta":{"keywords":["mobile computing","wireless protocols","mobile app development"],"tags":["PG","elective","CSE"]}}
{"id":"CS635","type":"course","department":"Computer Science and Engineering","title":"Approximation Algorithms","summary":"Covers the design and analysis of approximation algorithms for NP-hard problems.","credits":9,"content":{"description":"This course explores approximation algorithms for solving NP-hard problems, focusing on techniques like greedy, linear programming relaxations, and randomized rounding. It emphasizes performance guarantees and practical applications.","bullets":["Covers approximation techniques for NP-hard problems","Explores greedy and randomized approaches","Includes performance guarantee analysis"],"sections":[{"heading":"Core Topics","text":"Focuses on designing and analyzing approximation algorithms with provable guarantees.","bullets":["Greedy approximation algorithms","Linear programming relaxations","Randomized rounding techniques"]},{"heading":"Applications","text":"Applications include scheduling, network optimization, and combinatorial problems.","bullets":["Scheduling and resource allocation","Network design and routing","Combinatorial optimization problems"]}]},"meta":{"keywords":["approximation algorithms","NP-hard problems","greedy algorithms","randomized rounding"],"tags":["PG","elective","CSE"]}}
{"id":"CS636","type":"course","department":"Computer Science and Engineering","title":"Analysis of Concurrent Programs","summary":"Focuses on techniques for analyzing and verifying concurrent programs.","credits":9,"content":{"description":"This course covers methods for analyzing concurrent programs, including concurrency models, deadlock detection, and formal verification. It emphasizes tools and techniques for ensuring correctness in multi-threaded systems.","bullets":["Covers concurrency models and verification","Explores deadlock detection techniques","Includes formal analysis tools"],"sections":[{"heading":"Core Topics","text":"Focuses on analyzing and ensuring the correctness of concurrent programs.","bullets":["Concurrency models (e.g., threads, actors)","Deadlock and race condition detection","Formal verification of concurrent systems"]},{"heading":"Applications","text":"Applications include verifying distributed systems and multi-threaded software.","bullets":["Concurrent software verification","Distributed system analysis","Debugging multi-threaded applications"]}]},"meta":{"keywords":["concurrent programs","formal verification","deadlock detection"],"tags":["PG","elective","CSE"]}}
{"id":"CS637","type":"course","department":"Computer Science and Engineering","title":"Embedded and Cyber-Physical Systems","summary":"Explores the design and implementation of embedded and cyber-physical systems.","credits":9,"content":{"description":"This course covers the design and implementation of embedded and cyber-physical systems, focusing on real-time constraints, hardware-software co-design, and sensor integration. It includes practical projects in embedded system development.","bullets":["Covers real-time embedded systems","Explores hardware-software co-design","Includes sensor integration projects"],"sections":[{"heading":"Core Topics","text":"Focuses on the design and implementation of embedded and cyber-physical systems.","bullets":["Real-time system design","Hardware-software co-design","Sensor and actuator integration"]},{"heading":"Applications","text":"Applications include IoT, automotive systems, and robotics.","bullets":["IoT device development","Automotive embedded systems","Robotics and control systems"]}]},"meta":{"keywords":["embedded systems","real-time systems","cyber-physical systems"],"tags":["PG","elective","CSE"]}}
{"id":"CS640","type":"course","department":"Computer Science and Engineering","title":"Computational Complexity","summary":"Covers advanced topics in computational complexity theory.","credits":9,"content":{"description":"This course explores advanced topics in computational complexity, including time and space complexity, complexity classes, and reducibility. It emphasizes theoretical foundations and their implications.","bullets":["Covers time and space complexity","Explores complexity classes","Includes reducibility and completeness"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced theoretical aspects of computational complexity.","bullets":["Time and space complexity analysis","Complexity classes (e.g., P, NP, PSPACE)","Reducibility and NP-completeness"]},{"heading":"Applications","text":"Applications include algorithm design and theoretical computer science.","bullets":["Algorithm complexity analysis","Complexity-based cryptography","Theoretical problem classification"]}]},"meta":{"keywords":["computational complexity","complexity classes","reducibility"],"tags":["PG","elective","CSE"]}}
{"id":"CS641","type":"course","department":"Computer Science and Engineering","title":"Advanced Automata Theory","summary":"Covers advanced topics in automata theory and formal languages.","credits":9,"content":{"description":"This course explores advanced topics in automata theory, including pushdown automata, context-sensitive languages, and advanced computational models. It emphasizes formal language theory and applications.","bullets":["Covers advanced automata models","Explores context-sensitive languages","Includes computational model applications"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced automata and formal language theory.","bullets":["Pushdown automata and context-free languages","Context-sensitive languages","Advanced computational models"]},{"heading":"Applications","text":"Applications include compiler design and formal verification.","bullets":["Parser design for compilers","Formal verification systems","Language processing applications"]}]},"meta":{"keywords":["automata theory","formal languages","computational models"],"tags":["PG","elective","CSE"]}}
{"id":"CS641","type":"course","department":"Computer Science and Engineering","title":"Advanced Automata Theory","summary":"Covers advanced topics in automata theory and formal languages.","credits":9,"content":{"description":"This course explores advanced topics in automata theory, including pushdown automata, context-sensitive languages, and advanced computational models. It emphasizes formal language theory and applications.","bullets":["Covers advanced automata models","Explores context-sensitive languages","Includes computational model applications"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced automata and formal language theory.","bullets":["Pushdown automata and context-free languages","Context-sensitive languages","Advanced computational models"]},{"heading":"Applications","text":"Applications include compiler design and formal verification.","bullets":["Parser design for compilers","Formal verification systems","Language processing applications"]}]},"meta":{"keywords":["automata theory","formal languages","computational models"],"tags":["PG","elective","CSE"]}}
{"id":"CS642","type":"course","department":"Computer Science and Engineering","title":"Circuit Complexity Theory","summary":"Explores circuit complexity and its implications in computational theory.","credits":9,"content":{"description":"This course covers circuit complexity, including Boolean circuits, circuit lower bounds, and their applications in computational complexity. It emphasizes theoretical analysis and implications.","bullets":["Covers Boolean circuit complexity","Explores circuit lower bounds","Includes complexity applications"],"sections":[{"heading":"Core Topics","text":"Focuses on the theoretical aspects of circuit complexity.","bullets":["Boolean circuit models","Circuit lower bounds","Complexity class implications"]},{"heading":"Applications","text":"Applications include algorithm design and cryptographic systems.","bullets":["Algorithm optimization with circuits","Cryptographic circuit design","Complexity-based analysis"]}]},"meta":{"keywords":["circuit complexity","Boolean circuits","lower bounds"],"tags":["PG","elective","CSE"]}}
{"id":"CS643","type":"course","department":"Computer Science and Engineering","title":"Abstract State Machines","summary":"Covers abstract state machines and their applications in system modeling.","credits":9,"content":{"description":"This course explores abstract state machines (ASMs) for modeling and verifying complex systems. It includes ASM specification, refinement, and applications in system design.","bullets":["Covers ASM specification","Explores system verification","Includes ASM applications"],"sections":[{"heading":"Core Topics","text":"Focuses on modeling and verifying systems using abstract state machines.","bullets":["ASM specification and semantics","System refinement techniques","Verification with ASMs"]},{"heading":"Applications","text":"Applications include system design and formal verification.","bullets":["System modeling with ASMs","Formal verification of systems","Software and hardware design"]}]},"meta":{"keywords":["abstract state machines","system modeling","formal verification"],"tags":["PG","elective","CSE"]}}
{"id":"CS644","type":"course","department":"Computer Science and Engineering","title":"Finite Automata on Infinite Inputs","summary":"Explores finite automata for infinite input sequences.","credits":9,"content":{"description":"This course covers finite automata on infinite inputs, including Büchi automata, omega-regular languages, and their applications in verification and reactive systems.","bullets":["Covers Büchi automata","Explores omega-regular languages","Includes verification applications"],"sections":[{"heading":"Core Topics","text":"Focuses on automata for infinite input sequences and their applications.","bullets":["Büchi and Rabin automata","Omega-regular languages","Verification of reactive systems"]},{"heading":"Applications","text":"Applications include formal verification and system modeling.","bullets":["Reactive system verification","Infinite sequence modeling","Formal system analysis"]}]},"meta":{"keywords":["finite automata","infinite inputs","Büchi automata"],"tags":["PG","elective","CSE"]}}
{"id":"CS645","type":"course","department":"Computer Science and Engineering","title":"Topics in Complexity Theory","summary":"Explores advanced topics in computational complexity theory.","credits":9,"content":{"description":"This course covers advanced topics in complexity theory, including interactive proofs, zero-knowledge proofs, and quantum complexity. It emphasizes theoretical advancements and their implications.","bullets":["Covers interactive proofs","Explores zero-knowledge proofs","Includes quantum complexity"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced concepts in computational complexity.","bullets":["Interactive proof systems","Zero-knowledge proof protocols","Quantum complexity classes"]},{"heading":"Applications","text":"Applications include cryptography and algorithm design.","bullets":["Cryptographic protocol design","Quantum algorithm analysis","Complexity-based system design"]}]},"meta":{"keywords":["complexity theory","interactive proofs","quantum complexity"],"tags":["PG","elective","CSE"]}}
{"id":"CS647","type":"course","department":"Computer Science and Engineering","title":"Advanced Topics in Algorithms and Data Structures","summary":"Covers advanced topics in algorithm and data structure design.","credits":9,"content":{"description":"This course explores advanced algorithms and data structures, including randomized algorithms, advanced graph algorithms, and data structures for big data. It emphasizes theoretical and practical aspects.","bullets":["Covers randomized algorithms","Explores advanced graph algorithms","Includes big data structures"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced techniques in algorithm and data structure design.","bullets":["Randomized algorithm design","Advanced graph algorithms","Data structures for big data"]},{"heading":"Applications","text":"Applications include big data processing and network optimization.","bullets":["Big data algorithm design","Network optimization algorithms","Scalable data structures"]}]},"meta":{"keywords":["algorithms","data structures","randomized algorithms"],"tags":["PG","elective","CSE"]}}
{"id":"CS648","type":"course","department":"Computer Science and Engineering","title":"Randomized Algorithms","summary":"Covers the design and analysis of randomized algorithms.","credits":9,"content":{"description":"This course explores randomized algorithms, including Monte Carlo and Las Vegas algorithms, randomized data structures, and their applications. It emphasizes probabilistic analysis and performance guarantees.","bullets":["Covers Monte Carlo and Las Vegas algorithms","Explores randomized data structures","Includes probabilistic analysis"],"sections":[{"heading":"Core Topics","text":"Focuses on the design and analysis of randomized algorithms.","bullets":["Monte Carlo and Las Vegas algorithms","Randomized data structures","Probabilistic performance analysis"]},{"heading":"Applications","text":"Applications include optimization and machine learning.","bullets":["Randomized optimization algorithms","Machine learning with randomization","Probabilistic system design"]}]},"meta":{"keywords":["randomized algorithms","Monte Carlo","Las Vegas"],"tags":["PG","elective","CSE"]}}
{"id":"CS649","type":"course","department":"Computer Science and Engineering","title":"Logic in Computer Science","summary":"Covers applications of logic in computer science.","credits":9,"content":{"description":"This course explores the applications of logic in computer science, including propositional logic, predicate logic, and temporal logic. It emphasizes formal verification and reasoning systems.","bullets":["Covers propositional and predicate logic","Explores temporal logic","Includes formal verification"],"sections":[{"heading":"Core Topics","text":"Focuses on logical systems and their applications in computer science.","bullets":["Propositional and predicate logic","Temporal logic for system verification","Logic-based reasoning systems"]},{"heading":"Applications","text":"Applications include formal verification and AI reasoning.","bullets":["Formal system verification","AI reasoning frameworks","Logic-based system design"]}]},"meta":{"keywords":["logic","formal verification","temporal logic"],"tags":["PG","elective","CSE"]}}
{"id":"CS650","type":"course","department":"Computer Science and Engineering","title":"Topics in Lambda Calculus","summary":"Explores lambda calculus and its applications in computer science.","credits":9,"content":{"description":"This course covers lambda calculus, including untyped and typed lambda calculus, type systems, and their applications in functional programming and semantics.","bullets":["Covers untyped and typed lambda calculus","Explores type systems","Includes computational model applications"],"sections":[{"heading":"Core Topics","text":"Focuses on the foundations of lambda calculus and its applications.","bullets":["Untyped and typed lambda calculus","Type systems and semantics","Computational models in lambda calculus"]},{"heading":"Applications","text":"Applications include functional programming and formal semantics.","bullets":["Functional programming in Haskell","Formal semantics of languages","Type system design"]}]},"meta":{"keywords":["lambda calculus","type systems","functional programming"],"tags":["PG","elective","CSE"]}}
{"id":"CS698W","type":"course","department":"Computer Science and Engineering","title":"Topics in Game Theory and Collective Choice","summary":"Explores advanced topics in game theory and collective choice mechanisms.","credits":9,"content":{"description":"This course covers advanced topics in game theory and collective choice, including cooperative games, voting systems, and social choice theory. It emphasizes strategic interactions and decision-making.","bullets":["Covers cooperative games","Explores voting systems","Includes social choice theory"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced game-theoretic and collective choice mechanisms.","bullets":["Cooperative game theory","Voting and preference aggregation","Social choice and fairness"]},{"heading":"Applications","text":"Applications include resource allocation and multi-agent systems.","bullets":["Resource allocation mechanisms","Multi-agent system design","Fair division problems"]}]},"meta":{"keywords":["game theory","collective choice","social choice"],"tags":["PG","elective","CSE"]}}
{"id":"CS698X","type":"course","department":"Computer Science and Engineering","title":"Topics in Probabilistic Modeling and Inference","summary":"Explores advanced probabilistic modeling and inference techniques.","credits":9,"content":{"description":"This course covers advanced topics in probabilistic modeling and inference, including Bayesian networks, Markov models, and variational inference. It emphasizes applications in machine learning and data analysis.","bullets":["Covers Bayesian networks","Explores Markov models","Includes variational inference"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced probabilistic modeling and inference methods.","bullets":["Bayesian networks and graphical models","Markov models and processes","Variational and Monte Carlo inference"]},{"heading":"Applications","text":"Applications include machine learning, data analysis, and uncertainty modeling.","bullets":["Probabilistic machine learning","Data analysis with uncertainty","Inference in complex systems"]}]},"meta":{"keywords":["probabilistic modeling","Bayesian networks","variational inference"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS698Y","type":"course","department":"Computer Science and Engineering","title":"Human AI Interaction","summary":"Covers principles and techniques for human-AI interaction design.","credits":9,"content":{"description":"This course explores human-AI interaction, focusing on designing intuitive interfaces, explainable AI, and user-centered AI systems. It includes practical projects in building interactive AI applications.","bullets":["Covers intuitive AI interfaces","Explores explainable AI","Includes user-centered AI design"],"sections":[{"heading":"Core Topics","text":"Focuses on designing effective human-AI interaction systems.","bullets":["User-centered AI interface design","Explainable AI techniques","Human-AI collaboration models"]},{"heading":"Applications","text":"Applications include conversational AI, recommender systems, and assistive technologies.","bullets":["Conversational AI systems","Recommender system interfaces","Assistive AI technologies"]}]},"meta":{"keywords":["human-AI interaction","explainable AI","user-centered design"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS698Z","type":"course","department":"Computer Science and Engineering","title":"Fundamentals of Error Correcting Codes","summary":"Covers the theory and applications of error-correcting codes.","credits":9,"content":{"description":"This course explores error-correcting codes, including linear codes, cyclic codes, and their applications in communication systems. It emphasizes coding theory and practical implementations.","bullets":["Covers linear and cyclic codes","Explores coding theory","Includes communication system applications"],"sections":[{"heading":"Core Topics","text":"Focuses on the theoretical foundations of error-correcting codes.","bullets":["Linear codes and Hamming codes","Cyclic codes and BCH codes","Decoding algorithms"]},{"heading":"Applications","text":"Applications include reliable communication and data storage.","bullets":["Communication system reliability","Data storage error correction","Cryptographic applications"]}]},"meta":{"keywords":["error-correcting codes","linear codes","cyclic codes"],"tags":["PG","elective","CSE"]}}
{"id":"CS699","type":"course","department":"Computer Science and Engineering","title":"M.Tech. Thesis","summary":"Thesis work for MTech students in computer science.","credits":12,"content":{"description":"This course involves independent research for MTech students under faculty supervision, culminating in a thesis on a computer science topic. Students conduct in-depth research or development.","bullets":["Involves independent research","Supervised by faculty","Culminates in a thesis"],"sections":[{"heading":"Core Activities","text":"Focuses on independent research and thesis development.","bullets":["Research topic selection","Literature review and methodology","Thesis writing and defense"]},{"heading":"Applications","text":"Applications vary based on the research topic, including algorithms, AI, or systems.","bullets":["Algorithmic research","AI system development","Systems and software engineering"]}]},"meta":{"keywords":["MTech thesis","independent research","computer science"],"tags":["PG","thesis","CSE"]}}
{"id":"CS711","type":"course","department":"Computer Science and Engineering","title":"Introduction to Game Theory and Mechanism Design","summary":"Introduces game theory and mechanism design principles.","credits":9,"content":{"description":"This course introduces game theory and mechanism design, covering Nash equilibria, auctions, and incentive-compatible mechanisms. It emphasizes strategic interactions and system design.","bullets":["Covers Nash equilibria","Explores auction design","Includes incentive-compatible mechanisms"],"sections":[{"heading":"Core Topics","text":"Focuses on foundational concepts in game theory and mechanism design.","bullets":["Nash and other equilibria","Auction theory basics","Incentive compatibility principles"]},{"heading":"Applications","text":"Applications include auctions, market design, and multi-agent systems.","bullets":["Auction systems","Market mechanism design","Multi-agent system analysis"]}]},"meta":{"keywords":["game theory","mechanism design","Nash equilibrium"],"tags":["PG","elective","CSE"]}}
{"id":"CS712","type":"course","department":"Computer Science and Engineering","title":"Selected Areas of Mechanism Design","summary":"Explores advanced topics in mechanism design for strategic systems.","credits":9,"content":{"description":"This course covers advanced topics in mechanism design, including complex auctions, social choice mechanisms, and algorithmic mechanism design. It emphasizes practical and theoretical advancements.","bullets":["Covers complex auction design","Explores social choice mechanisms","Includes algorithmic mechanism design"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced mechanism design techniques for strategic interactions.","bullets":["Complex auction mechanisms","Advanced social choice theory","Algorithmic mechanism design"]},{"heading":"Applications","text":"Applications include online markets, resource allocation, and voting systems.","bullets":["Online market mechanisms","Resource allocation systems","Voting system design"]}]},"meta":{"keywords":["mechanism design","auctions","social choice"],"tags":["PG","elective","CSE"]}}
{"id":"CS714","type":"course","department":"Computer Science and Engineering","title":"Secure Computation","summary":"Covers techniques for secure multi-party computation.","credits":9,"content":{"description":"This course explores secure multi-party computation, including cryptographic protocols, homomorphic encryption, and privacy-preserving computation. It emphasizes secure collaborative computation.","bullets":["Covers secure multi-party computation","Explores homomorphic encryption","Includes privacy-preserving protocols"],"sections":[{"heading":"Core Topics","text":"Focuses on cryptographic techniques for secure computation.","bullets":["Secure multi-party computation protocols","Homomorphic encryption techniques","Privacy-preserving computation"]},{"heading":"Applications","text":"Applications include secure data sharing and collaborative computation.","bullets":["Secure cloud computing","Collaborative data analysis","Privacy-preserving machine learning"]}]},"meta":{"keywords":["secure computation","homomorphic encryption","privacy"],"tags":["PG","elective","CSE"]}}
{"id":"CS715","type":"course","department":"Computer Science and Engineering","title":"Cryptographic Protocols","summary":"Covers the design and analysis of cryptographic protocols.","credits":9,"content":{"description":"This course explores cryptographic protocols, including zero-knowledge proofs, secure multi-party computation, and key exchange protocols. It emphasizes protocol design and security analysis.","bullets":["Covers zero-knowledge proofs","Explores secure multi-party computation","Includes key exchange protocols"],"sections":[{"heading":"Core Topics","text":"Focuses on designing and analyzing secure cryptographic protocols.","bullets":["Zero-knowledge proof systems","Secure multi-party computation","Key exchange and authentication protocols"]},{"heading":"Applications","text":"Applications include secure communication and blockchain systems.","bullets":["Secure communication protocols","Blockchain security","Authentication systems"]}]},"meta":{"keywords":["cryptographic protocols","zero-knowledge proofs","secure computation"],"tags":["PG","elective","CSE"]}}
{"id":"CS718","type":"course","department":"Computer Science and Engineering","title":"Sublinear Algorithms for Processing Massive Data Sets","summary":"Covers sublinear algorithms for large-scale data processing.","credits":9,"content":{"description":"This course explores sublinear algorithms for processing massive datasets, including property testing, streaming algorithms, and sketching. It emphasizes efficient computation with limited resources.","bullets":["Covers property testing","Explores streaming algorithms","Includes sketching techniques"],"sections":[{"heading":"Core Topics","text":"Focuses on algorithms that operate with sublinear time or space.","bullets":["Property testing algorithms","Streaming data algorithms","Sketching and sampling techniques"]},{"heading":"Applications","text":"Applications include big data analytics and network monitoring.","bullets":["Big data processing","Network traffic analysis","Sublinear algorithm applications"]}]},"meta":{"keywords":["sublinear algorithms","streaming algorithms","big data"],"tags":["PG","elective","CSE"]}}
{"id":"CS719","type":"course","department":"Computer Science and Engineering","title":"Data Streaming Algorithms and Systems","summary":"Covers algorithms and systems for processing streaming data.","credits":9,"content":{"description":"This course explores data streaming algorithms and systems, focusing on real-time data processing, windowed computations, and streaming frameworks. It includes practical projects in streaming systems.","bullets":["Covers streaming algorithms","Explores windowed computations","Includes streaming frameworks"],"sections":[{"heading":"Core Topics","text":"Focuses on algorithms and systems for real-time data streaming.","bullets":["Streaming algorithm design","Windowed computation techniques","Streaming frameworks (e.g., Apache Flink)"]},{"heading":"Applications","text":"Applications include real-time analytics and IoT data processing.","bullets":["Real-time analytics platforms","IoT data streaming","Streaming data processing"]}]},"meta":{"keywords":["data streaming","streaming algorithms","real-time processing"],"tags":["PG","elective","CSE"]}}
{"id":"CS720","type":"course","department":"Computer Science and Engineering","title":"Introduction to Network Science","summary":"Introduces network science concepts, focusing on network structures and dynamics.","credits":9,"content":{"description":"This course introduces network science, covering network models, graph theory, and dynamics on networks. It includes applications in social, biological, and technological networks.","bullets":["Covers network models and graph theory","Explores dynamics on networks","Includes applications in various domains"],"sections":[{"heading":"Core Topics","text":"Focuses on the principles of network science and network analysis.","bullets":["Graph theory and network models","Network dynamics and propagation","Centrality and community detection"]},{"heading":"Applications","text":"Applications include social network analysis, biological networks, and infrastructure networks.","bullets":["Social network analysis","Biological network modeling","Infrastructure network optimization"]}]},"meta":{"keywords":["network science","graph theory","network dynamics"],"tags":["PG","elective","CSE"]}}
{"id":"CS725","type":"course","department":"Computer Science and Engineering","title":"Topics in Network Security","summary":"Explores advanced topics in network security and defense mechanisms.","credits":9,"content":{"description":"This course covers advanced network security topics, including intrusion detection, secure protocols, and threat modeling. It includes practical exercises in securing network systems.","bullets":["Covers intrusion detection systems","Explores secure network protocols","Includes threat modeling exercises"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced techniques for securing network systems.","bullets":["Intrusion detection and prevention","Secure protocols (e.g., IPsec, TLS)","Threat modeling and risk assessment"]},{"heading":"Applications","text":"Applications include securing enterprise networks and cloud systems.","bullets":["Enterprise network security","Cloud security solutions","Network threat mitigation"]}]},"meta":{"keywords":["network security","intrusion detection","secure protocols"],"tags":["PG","elective","CSE"]}}
{"id":"CS726","type":"course","department":"Computer Science and Engineering","title":"Topics in Multimedia","summary":"Covers advanced multimedia processing and systems.","credits":9,"content":{"description":"This course explores advanced multimedia topics, including image and video processing, compression techniques, and multimedia systems. It includes practical projects in multimedia applications.","bullets":["Covers image and video processing","Explores compression techniques","Includes multimedia system projects"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced multimedia processing and system design.","bullets":["Image and video processing algorithms","Compression standards (e.g., JPEG, MPEG)","Multimedia system architectures"]},{"heading":"Applications","text":"Applications include multimedia streaming and content delivery systems.","bullets":["Multimedia streaming platforms","Content delivery networks","Multimedia application development"]}]},"meta":{"keywords":["multimedia","image processing","video compression"],"tags":["PG","elective","CSE"]}}
{"id":"CS727","type":"course","department":"Computer Science and Engineering","title":"Topics in Internet Technologies","summary":"Explores advanced internet technologies and protocols.","credits":9,"content":{"description":"This course covers advanced internet technologies, including next-generation protocols, web architectures, and internet scalability. It includes practical projects in internet system development.","bullets":["Covers next-generation protocols","Explores web architectures","Includes internet scalability projects"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced internet technologies and their implementation.","bullets":["Next-generation protocols (e.g., HTTP/3)","Web architecture design","Scalability and load balancing"]},{"heading":"Applications","text":"Applications include scalable web systems and internet infrastructure.","bullets":["Scalable web application development","Internet infrastructure optimization","Cloud-based internet systems"]}]},"meta":{"keywords":["internet technologies","web architectures","scalability"],"tags":["PG","elective","CSE"]}}
{"id":"CS728","type":"course","department":"Computer Science and Engineering","title":"Topics in Grid Computing","summary":"Explores grid computing architectures and applications.","credits":9,"content":{"description":"This course covers grid computing, focusing on distributed resource management, grid architectures, and applications in high-performance computing. It includes practical projects in grid systems.","bullets":["Covers distributed resource management","Explores grid architectures","Includes grid computing projects"],"sections":[{"heading":"Core Topics","text":"Focuses on the design and implementation of grid computing systems.","bullets":["Distributed resource management","Grid architecture design","High-performance grid applications"]},{"heading":"Applications","text":"Applications include scientific computing and large-scale data processing.","bullets":["Scientific computing on grids","Large-scale data processing","Grid-based resource sharing"]}]},"meta":{"keywords":["grid computing","distributed systems","high-performance computing"],"tags":["PG","elective","CSE"]}}
{"id":"CS730","type":"course","department":"Computer Science and Engineering","title":"Topics in Operating Systems","summary":"Covers advanced topics in operating system design and implementation.","credits":9,"content":{"description":"This course explores advanced operating system topics, including virtualization, real-time systems, and kernel optimizations. It includes practical projects in OS development.","bullets":["Covers virtualization techniques","Explores real-time systems","Includes kernel optimization projects"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced operating system design and implementation.","bullets":["Virtualization and containerization","Real-time operating system design","Kernel performance optimization"]},{"heading":"Applications","text":"Applications include cloud computing and embedded systems.","bullets":["Cloud computing OS design","Real-time embedded systems","Kernel optimization for performance"]}]},"meta":{"keywords":["operating systems","virtualization","real-time systems"],"tags":["PG","elective","CSE"]}}
{"id":"CS738","type":"course","department":"Computer Science and Engineering","title":"Advanced Compiler Optimizations","summary":"Covers advanced techniques in compiler optimization and code generation.","credits":9,"content":{"description":"This course explores advanced compiler optimization techniques, including loop optimizations, register allocation, and inter-procedural optimizations. It includes practical projects in compiler development.","bullets":["Covers loop optimizations","Explores register allocation","Includes inter-procedural optimizations"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced techniques for optimizing compiler-generated code.","bullets":["Loop optimization techniques","Register allocation strategies","Inter-procedural optimization"]},{"heading":"Applications","text":"Applications include high-performance code generation and compiler design.","bullets":["Optimizing compilers for performance","Code generation for embedded systems","Advanced compiler development"]}]},"meta":{"keywords":["compiler optimizations","loop optimizations","register allocation"],"tags":["PG","elective","CSE"]}}
{"id":"CS740","type":"course","department":"Computer Science and Engineering","title":"Topics in Logic and Computation","summary":"Explores advanced topics in logic and their applications in computation.","credits":9,"content":{"description":"This course covers advanced topics in logic, including modal logic, temporal logic, and their applications in verification and synthesis. It emphasizes formal methods in computing.","bullets":["Covers modal and temporal logic","Explores verification techniques","Includes synthesis applications"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced logical systems and their computational applications.","bullets":["Modal and temporal logic","Formal verification techniques","Program synthesis with logic"]},{"heading":"Applications","text":"Applications include formal verification and automated system design.","bullets":["Verification of software systems","Synthesis of reactive systems","Logic-based system analysis"]}]},"meta":{"keywords":["logic","formal verification","temporal logic"],"tags":["PG","elective","CSE"]}}
{"id":"CS742","type":"course","department":"Computer Science and Engineering","title":"Computational Number Theory","summary":"Covers computational techniques in number theory and their applications.","credits":9,"content":{"description":"This course explores computational number theory, including primality testing, factoring algorithms, and cryptographic applications. It emphasizes algorithmic efficiency and practical implementations.","bullets":["Covers primality testing","Explores factoring algorithms","Includes cryptographic applications"],"sections":[{"heading":"Core Topics","text":"Focuses on computational techniques for number theory problems.","bullets":["Primality testing algorithms","Factoring and discrete logarithm","Cryptographic number theory"]},{"heading":"Applications","text":"Applications include cryptography and algorithm design.","bullets":["Cryptographic protocol design","Algorithmic number theory","Secure system implementations"]}]},"meta":{"keywords":["number theory","primality testing","cryptography"],"tags":["PG","elective","CSE"]}}
{"id":"CS743","type":"course","department":"Computer Science and Engineering","title":"Advanced Graph Algorithms","summary":"Covers advanced graph algorithms and their applications.","credits":9,"content":{"description":"This course explores advanced graph algorithms, including flow algorithms, matching algorithms, and graph partitioning. It emphasizes theoretical analysis and practical applications.","bullets":["Covers flow and matching algorithms","Explores graph partitioning","Includes practical graph applications"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced algorithms for graph problems.","bullets":["Maximum flow and minimum cut","Matching and covering algorithms","Graph partitioning techniques"]},{"heading":"Applications","text":"Applications include network optimization and social network analysis.","bullets":["Network flow optimization","Social network analysis","Graph-based data processing"]}]},"meta":{"keywords":["graph algorithms","network flow","graph partitioning"],"tags":["PG","elective","CSE"]}}
{"id":"CS744","type":"course","department":"Computer Science and Engineering","title":"Pseudo-Random Generators","summary":"Covers the theory and applications of pseudo-random generators.","credits":9,"content":{"description":"This course explores pseudo-random generators, including their construction, properties, and applications in cryptography and algorithms. It emphasizes theoretical foundations and practical uses.","bullets":["Covers pseudo-random generator construction","Explores cryptographic applications","Includes algorithmic uses"],"sections":[{"heading":"Core Topics","text":"Focuses on the theory and construction of pseudo-random generators.","bullets":["Pseudo-random generator design","Cryptographic properties","Randomness in algorithms"]},{"heading":"Applications","text":"Applications include cryptography and randomized algorithms.","bullets":["Cryptographic key generation","Randomized algorithm design","Secure protocol implementation"]}]},"meta":{"keywords":["pseudo-random generators","cryptography","randomized algorithms"],"tags":["PG","elective","CSE"]}}
{"id":"CS745","type":"course","department":"Computer Science and Engineering","title":"Geometric Algorithms","summary":"Covers algorithms for geometric problems and their applications.","credits":9,"content":{"description":"This course explores geometric algorithms, including convex hulls, Voronoi diagrams, and computational geometry techniques. It emphasizes applications in graphics and spatial analysis.","bullets":["Covers convex hulls and Voronoi diagrams","Explores computational geometry","Includes spatial analysis applications"],"sections":[{"heading":"Core Topics","text":"Focuses on algorithms for solving geometric problems.","bullets":["Convex hull and line intersection","Voronoi diagrams and Delaunay triangulation","Geometric query processing"]},{"heading":"Applications","text":"Applications include computer graphics and GIS.","bullets":["Graphics rendering algorithms","Geographic information systems","Spatial data analysis"]}]},"meta":{"keywords":["geometric algorithms","computational geometry","spatial analysis"],"tags":["PG","elective","CSE"]}}
{"id":"CS746","type":"course","department":"Computer Science and Engineering","title":"Riemannian Computing in Computer Vision","summary":"Explores Riemannian geometry applications in computer vision.","credits":9,"content":{"description":"This course covers Riemannian geometry and its applications in computer vision, including manifold-based algorithms and shape analysis. It includes practical projects in vision systems.","bullets":["Covers Riemannian geometry","Explores manifold-based algorithms","Includes shape analysis applications"],"sections":[{"heading":"Core Topics","text":"Focuses on applying Riemannian geometry to computer vision problems.","bullets":["Riemannian manifolds in vision","Manifold-based optimization","Shape analysis techniques"]},{"heading":"Applications","text":"Applications include image processing and 3D modeling.","bullets":["Image segmentation and analysis","3D shape modeling","Manifold-based vision systems"]}]},"meta":{"keywords":["Riemannian geometry","computer vision","shape analysis"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS747","type":"course","department":"Computer Science and Engineering","title":"Randomized Methods in Computational Complexity","summary":"Covers randomized methods in computational complexity theory.","credits":9,"content":{"description":"This course explores randomized methods in computational complexity, including randomized complexity classes, derandomization, and applications in algorithm design.","bullets":["Covers randomized complexity classes","Explores derandomization techniques","Includes complexity applications"],"sections":[{"heading":"Core Topics","text":"Focuses on randomized methods in computational complexity.","bullets":["Randomized complexity classes (e.g., RP, BPP)","Derandomization techniques","Randomness in complexity analysis"]},{"heading":"Applications","text":"Applications include algorithm design and cryptography.","bullets":["Randomized algorithm optimization","Cryptographic protocol design","Complexity-based analysis"]}]},"meta":{"keywords":["randomized methods","computational complexity","derandomization"],"tags":["PG","elective","CSE"]}}
{"id":"CS748","type":"course","department":"Computer Science and Engineering","title":"Arithmetic Circuit Complexity","summary":"Covers arithmetic circuit complexity and its applications.","credits":9,"content":{"description":"This course explores arithmetic circuit complexity, including circuit models, lower bounds, and applications in algebraic computation. It emphasizes theoretical analysis.","bullets":["Covers arithmetic circuit models","Explores lower bounds","Includes algebraic computation applications"],"sections":[{"heading":"Core Topics","text":"Focuses on the theoretical aspects of arithmetic circuit complexity.","bullets":["Arithmetic circuit models","Lower bounds and complexity","Algebraic computation techniques"]},{"heading":"Applications","text":"Applications include algebraic algorithms and cryptography.","bullets":["Algebraic algorithm design","Cryptographic applications","Complexity analysis of circuits"]}]},"meta":{"keywords":["arithmetic circuits","circuit complexity","algebraic computation"],"tags":["PG","elective","CSE"]}}
{"id":"CS749","type":"course","department":"Computer Science and Engineering","title":"Logic and Functional Programming","summary":"Covers logic and functional programming paradigms.","credits":9,"content":{"description":"This course explores logic and functional programming, including declarative programming, logic-based systems, and functional language design. It includes practical projects in functional programming.","bullets":["Covers logic programming","Explores functional programming","Includes declarative system projects"],"sections":[{"heading":"Core Topics","text":"Focuses on logic and functional programming paradigms.","bullets":["Logic programming with Prolog","Functional programming with Haskell","Declarative system design"]},{"heading":"Applications","text":"Applications include AI systems and declarative programming.","bullets":["AI reasoning systems","Functional programming applications","Declarative system development"]}]},"meta":{"keywords":["logic programming","functional programming","declarative systems"],"tags":["PG","elective","CSE"]}}
{"id":"CS753","type":"course","department":"Computer Science and Engineering","title":"Automatic Speech Recognition","summary":"Covers techniques for automatic speech recognition systems.","credits":9,"content":{"description":"This course explores automatic speech recognition, including acoustic modeling, language modeling, and deep learning techniques. It includes practical projects in speech recognition systems.","bullets":["Covers acoustic and language modeling","Explores deep learning for speech","Includes speech recognition projects"],"sections":[{"heading":"Core Topics","text":"Focuses on techniques for building speech recognition systems.","bullets":["Acoustic modeling with HMMs","Language modeling techniques","Deep learning for speech recognition"]},{"heading":"Applications","text":"Applications include voice assistants and transcription systems.","bullets":["Voice assistant development","Speech-to-text transcription","Speech recognition for accessibility"]}]},"meta":{"keywords":["speech recognition","acoustic modeling","deep learning"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS754","type":"course","department":"Computer Science and Engineering","title":"Advanced Image Processing","summary":"Covers advanced techniques in image processing and analysis.","credits":9,"content":{"description":"This course explores advanced image processing techniques, including image segmentation, feature extraction, and deep learning for image analysis. It includes practical projects in image processing.","bullets":["Covers image segmentation","Explores feature extraction","Includes deep learning applications"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced image processing and analysis techniques.","bullets":["Image segmentation algorithms","Feature extraction methods","Deep learning for image analysis"]},{"heading":"Applications","text":"Applications include medical imaging and computer vision.","bullets":["Medical image analysis","Object detection in vision","Image-based diagnostics"]}]},"meta":{"keywords":["image processing","computer vision","deep learning"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS755","type":"course","department":"Computer Science and Engineering","title":"Topics in Computer Vision","summary":"Explores advanced topics in computer vision and image analysis.","credits":9,"content":{"description":"This course covers advanced computer vision topics, including 3D reconstruction, object recognition, and vision-based deep learning. It includes practical projects in vision systems.","bullets":["Covers 3D reconstruction","Explores object recognition","Includes vision-based deep learning"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced techniques in computer vision.","bullets":["3D reconstruction techniques","Object recognition algorithms","Deep learning for vision tasks"]},{"heading":"Applications","text":"Applications include autonomous systems and augmented reality.","bullets":["Autonomous vehicle vision","Augmented reality systems","Vision-based robotics"]}]},"meta":{"keywords":["computer vision","3D reconstruction","object recognition"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS771","type":"course","department":"Computer Science and Engineering","title":"Introduction to Machine Learning","summary":"Introduces core machine learning concepts and techniques.","credits":9,"content":{"description":"This course introduces machine learning, covering supervised and unsupervised learning, regression, classification, and clustering. It includes practical projects in ML applications.","bullets":["Covers supervised and unsupervised learning","Explores regression and classification","Includes clustering techniques"],"sections":[{"heading":"Core Topics","text":"Focuses on foundational machine learning techniques.","bullets":["Supervised learning algorithms","Unsupervised learning and clustering","Regression and classification models"]},{"heading":"Applications","text":"Applications include data analytics and predictive modeling.","bullets":["Predictive modeling for business","Data clustering for insights","Machine learning in automation"]}]},"meta":{"keywords":["machine learning","supervised learning","clustering"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS772","type":"course","department":"Computer Science and Engineering","title":"Probabilistic Machine Learning","summary":"Covers probabilistic approaches to machine learning.","credits":9,"content":{"description":"This course explores probabilistic machine learning, including Bayesian methods, graphical models, and probabilistic inference. It emphasizes uncertainty modeling and applications.","bullets":["Covers Bayesian methods","Explores graphical models","Includes probabilistic inference"],"sections":[{"heading":"Core Topics","text":"Focuses on probabilistic approaches to machine learning.","bullets":["Bayesian learning and inference","Graphical models (e.g., Bayesian networks)","Probabilistic modeling techniques"]},{"heading":"Applications","text":"Applications include uncertainty modeling and decision-making.","bullets":["Uncertainty modeling in AI","Decision-making systems","Probabilistic data analysis"]}]},"meta":{"keywords":["probabilistic machine learning","Bayesian methods","graphical models"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS773","type":"course","department":"Computer Science and Engineering","title":"Foundations of Machine Learning","summary":"Covers theoretical foundations of machine learning.","credits":9,"content":{"description":"This course explores the theoretical foundations of machine learning, including statistical learning theory, PAC learning, and generalization bounds. It emphasizes theoretical analysis.","bullets":["Covers statistical learning theory","Explores PAC learning","Includes generalization bounds"],"sections":[{"heading":"Core Topics","text":"Focuses on the theoretical underpinnings of machine learning.","bullets":["Statistical learning theory","PAC learning framework","Generalization and complexity bounds"]},{"heading":"Applications","text":"Applications include algorithm design and model validation.","bullets":["Machine learning algorithm design","Model validation and selection","Theoretical analysis of ML systems"]}]},"meta":{"keywords":["machine learning","statistical learning","PAC learning"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS774","type":"course","department":"Computer Science and Engineering","title":"Optimization Techniques in Machine Learning","summary":"Covers optimization techniques for machine learning algorithms.","credits":9,"content":{"description":"This course explores optimization techniques in machine learning, including gradient descent, convex optimization, and stochastic optimization. It includes practical optimization projects.","bullets":["Covers gradient descent methods","Explores convex optimization","Includes stochastic optimization"],"sections":[{"heading":"Core Topics","text":"Focuses on optimization techniques for training machine learning models.","bullets":["Gradient descent and variants","Convex optimization techniques","Stochastic and batch optimization"]},{"heading":"Applications","text":"Applications include training neural networks and large-scale ML.","bullets":["Neural network optimization","Large-scale ML model training","Optimization for real-time systems"]}]},"meta":{"keywords":["optimization","machine learning","gradient descent"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS775","type":"course","department":"Computer Science and Engineering","title":"Advanced Machine Learning","summary":"Covers advanced machine learning techniques and applications.","credits":9,"content":{"description":"This course explores advanced machine learning topics, including deep learning, reinforcement learning, and generative models. It includes practical projects in advanced ML applications.","bullets":["Covers deep learning techniques","Explores reinforcement learning","Includes generative models"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced machine learning techniques and their implementation.","bullets":["Deep learning architectures","Reinforcement learning algorithms","Generative adversarial networks"]},{"heading":"Applications","text":"Applications include computer vision and natural language processing.","bullets":["Deep learning for vision tasks","Reinforcement learning for robotics","Generative models for data synthesis"]}]},"meta":{"keywords":["deep learning","reinforcement learning","generative models"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS776","type":"course","department":"Computer Science and Engineering","title":"Deep Learning for Natural Language Processing","summary":"Covers deep learning techniques for natural language processing.","credits":9,"content":{"description":"This course explores deep learning for natural language processing, including word embeddings, sequence models, and transformer architectures. It includes practical NLP projects.","bullets":["Covers word embeddings","Explores sequence models","Includes transformer architectures"],"sections":[{"heading":"Core Topics","text":"Focuses on deep learning techniques for processing natural language.","bullets":["Word embeddings and representations","Sequence models (e.g., RNN, LSTM)","Transformer models for NLP"]},{"heading":"Applications","text":"Applications include text generation and sentiment analysis.","bullets":["Text generation systems","Sentiment analysis models","NLP for conversational AI"]}]},"meta":{"keywords":["deep learning","natural language processing","transformers"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS777","type":"course","department":"Computer Science and Engineering","title":"Graphical and Generative Models for Machine Learning","summary":"Covers graphical and generative models in machine learning.","credits":9,"content":{"description":"This course explores graphical and generative models, including Bayesian networks, Markov random fields, and generative adversarial networks. It emphasizes modeling and inference.","bullets":["Covers Bayesian networks","Explores Markov random fields","Includes generative adversarial networks"],"sections":[{"heading":"Core Topics","text":"Focuses on graphical and generative models for machine learning.","bullets":["Bayesian networks and inference","Markov random fields","Generative adversarial networks"]},{"heading":"Applications","text":"Applications include data synthesis and probabilistic modeling.","bullets":["Data synthesis with GANs","Probabilistic modeling for AI","Graphical models for reasoning"]}]},"meta":{"keywords":["graphical models","generative models","Bayesian networks"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS778","type":"course","department":"Computer Science and Engineering","title":"Topics in Probabilistic Modeling and Inference","summary":"Explores advanced probabilistic modeling and inference techniques.","credits":9,"content":{"description":"This course covers advanced probabilistic modeling and inference, including variational inference, Monte Carlo methods, and probabilistic graphical models. It emphasizes applications in machine learning.","bullets":["Covers variational inference","Explores Monte Carlo methods","Includes probabilistic graphical models"],"sections":[{"heading":"Core Topics","text":"Focuses on advanced probabilistic modeling and inference techniques.","bullets":["Variational inference methods","Monte Carlo sampling techniques","Probabilistic graphical models"]},{"heading":"Applications","text":"Applications include machine learning and data analysis.","bullets":["Probabilistic machine learning","Data analysis with uncertainty","Inference in complex systems"]}]},"meta":{"keywords":["probabilistic modeling","variational inference","Monte Carlo"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS779","type":"course","department":"Computer Science and Engineering","title":"Statistical Natural Language Processing","summary":"Covers statistical methods for natural language processing.","credits":9,"content":{"description":"This course explores statistical methods for natural language processing, including probabilistic models, sequence labeling, and text classification. It includes practical NLP projects.","bullets":["Covers probabilistic NLP models","Explores sequence labeling","Includes text classification"],"sections":[{"heading":"Core Topics","text":"Focuses on statistical techniques for processing natural language.","bullets":["Probabilistic models for NLP","Sequence labeling with HMMs","Text classification algorithms"]},{"heading":"Applications","text":"Applications include text mining and information retrieval.","bullets":["Text mining and analysis","Information retrieval systems","NLP for text analytics"]}]},"meta":{"keywords":["natural language processing","statistical models","text classification"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS781","type":"course","department":"Computer Science and Engineering","title":"Cognition: Brain, Computation and Information Processing","summary":"Explores cognitive science and computational models of the brain.","credits":9,"content":{"description":"This course explores cognitive science, focusing on computational models of the brain, neural networks, and information processing. It includes applications in AI and cognitive modeling.","bullets":["Covers computational brain models","Explores neural networks","Includes cognitive information processing"],"sections":[{"heading":"Core Topics","text":"Focuses on computational approaches to cognitive science.","bullets":["Computational models of cognition","Neural network architectures","Information processing in the brain"]},{"heading":"Applications","text":"Applications include AI and cognitive system modeling.","bullets":["AI systems for cognition","Cognitive modeling in AI","Brain-inspired computing"]}]},"meta":{"keywords":["cognitive science","neural networks","information processing"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS784","type":"course","department":"Computer Science and Engineering","title":"Neural Networks and Fuzzy Logic","summary":"Covers neural networks and fuzzy logic systems.","credits":9,"content":{"description":"This course explores neural networks and fuzzy logic, including deep neural networks, fuzzy inference systems, and their applications in control and decision-making.","bullets":["Covers deep neural networks","Explores fuzzy inference systems","Includes control applications"],"sections":[{"heading":"Core Topics","text":"Focuses on neural networks and fuzzy logic for computational systems.","bullets":["Deep neural network architectures","Fuzzy logic and inference","Hybrid neural-fuzzy systems"]},{"heading":"Applications","text":"Applications include control systems and decision-making.","bullets":["Control systems with fuzzy logic","Neural networks for decision-making","Hybrid system applications"]}]},"meta":{"keywords":["neural networks","fuzzy logic","control systems"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS785","type":"course","department":"Computer Science and Engineering","title":"Multiagent Systems: Games, Algorithms, Evolution","summary":"Covers multiagent systems and their applications in games and algorithms.","credits":9,"content":{"description":"This course explores multiagent systems, including game-theoretic models, distributed algorithms, and evolutionary computation. It emphasizes interactions in multiagent environments.","bullets":["Covers game-theoretic models","Explores distributed algorithms","Includes evolutionary computation"],"sections":[{"heading":"Core Topics","text":"Focuses on multiagent system design and analysis.","bullets":["Game theory in multiagent systems","Distributed algorithm design","Evolutionary computation models"]},{"heading":"Applications","text":"Applications include distributed systems and AI.","bullets":["Multiagent AI systems","Distributed system coordination","Evolutionary algorithm applications"]}]},"meta":{"keywords":["multiagent systems","game theory","evolutionary computation"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS786","type":"course","department":"Computer Science and Engineering","title":"Computational Cognitive Science","summary":"Explores computational approaches to cognitive science.","credits":9,"content":{"description":"This course covers computational cognitive science, including cognitive modeling, neural computation, and learning algorithms. It emphasizes applications in AI and cognitive research.","bullets":["Covers cognitive modeling","Explores neural computation","Includes learning algorithms"],"sections":[{"heading":"Core Topics","text":"Focuses on computational approaches to understanding cognition.","bullets":["Cognitive modeling techniques","Neural computation models","Learning algorithms for cognition"]},{"heading":"Applications","text":"Applications include AI and cognitive research.","bullets":["AI systems for cognitive tasks","Cognitive model validation","Brain-inspired AI systems"]}]},"meta":{"keywords":["computational cognitive science","neural computation","cognitive modeling"],"tags":["PG","elective","CSE","ML/AI"]}}
{"id":"CS789","type":"course","department":"Computer Science and Engineering","title":"Computational Methods in Social Choice","summary":"Covers computational techniques in social choice and voting systems.","credits":9,"content":{"description":"This course explores computational social choice, including voting algorithms, preference aggregation, and fairness in decision-making. It emphasizes algorithmic design and analysis.","bullets":["Covers voting algorithms","Explores preference aggregation","Includes fairness in decision-making"],"sections":[{"heading":"Core Topics","text":"Focuses on computational approaches to social choice.","bullets":["Voting and ranking algorithms","Preference aggregation techniques","Fairness and social choice"]},{"heading":"Applications","text":"Applications include voting systems and resource allocation.","bullets":["Voting system design","Resource allocation algorithms","Fair decision-making systems"]}]},"meta":{"keywords":["social choice","voting algorithms","preference aggregation"],"tags":["PG","elective","CSE"]}}
{"id":"CS799","type":"course","department":"Computer Science and Engineering","title":"Ph.D. Thesis","summary":"Thesis work for PhD students in computer science.","credits":12,"content":{"description":"This course involves independent research for PhD students under faculty supervision, culminating in a dissertation on a computer science topic. Students conduct in-depth research or development.","bullets":["Involves independent research","Supervised by faculty","Culminates in a dissertation"],"sections":[{"heading":"Core Activities","text":"Focuses on independent research and dissertation development.","bullets":["Research topic selection","Literature review and methodology","Dissertation writing and defense"]},{"heading":"Applications","text":"Applications vary based on the research topic, including algorithms, AI, or systems.","bullets":["Algorithmic research","AI system development","Systems and software engineering"]}]},"meta":{"keywords":["PhD thesis","independent research","computer science"],"tags":["PG","thesis","CSE"]}}
{"id":"CS801","type":"course","department":"Computer Science and Engineering","title":"Innovations in Computer Science and Engineering","summary":"Explores cutting-edge innovations in computer science and engineering.","credits":9,"content":{"description":"This course covers recent innovations in computer science and engineering, including emerging technologies, research trends, and interdisciplinary applications. It emphasizes future directions in CSE.","bullets":["Covers emerging technologies","Explores research trends","Includes interdisciplinary applications"],"sections":[{"heading":"Core Topics","text":"Focuses on the latest advancements in computer science and engineering.","bullets":["Emerging technologies in CSE","Current research trends","Interdisciplinary CSE applications"]},{"heading":"Applications","text":"Applications include AI, quantum computing, and smart systems.","bullets":["AI-driven innovations","Quantum computing advancements","Smart system development"]}]},"meta":{"keywords":["innovations","emerging technologies","computer science"],"tags":["PG","elective","CSE"]}}
{"id":"CS888","type":"course","department":"Computer Science and Engineering","title":"Introduction to Profession and Communications Skills","summary":"Introduces professional skills and communication for computer scientists.","credits":6,"content":{"description":"This course introduces professional and communication skills for computer scientists, including technical writing, presentation skills, and teamwork. It emphasizes career preparation in CSE.","bullets":["Covers technical writing","Explores presentation skills","Includes teamwork and collaboration"],"sections":[{"heading":"Core Topics","text":"Focuses on professional skills for computer science careers.","bullets":["Technical writing and documentation","Effective presentation techniques","Teamwork and collaboration skills"]},{"heading":"Applications","text":"Applications include academic and industry communication.","bullets":["Research paper writing","Technical presentations","Collaborative project management"]}]},"meta":{"keywords":["professional skills","technical writing","communication"],"tags":["PG","elective","CSE"]}}
{"id":"CS899","type":"course","department":"Computer Science and Engineering","title":"M.S. Thesis","summary":"Thesis work for M.S. students in computer science.","credits":12,"content":{"description":"This course involves independent research for M.S. students under faculty supervision, culminating in a thesis on a computer science topic. Students conduct in-depth research or development.","bullets":["Involves independent research","Supervised by faculty","Culminates in a thesis"],"sections":[{"heading":"Core Activities","text":"Focuses on independent research and thesis development.","bullets":["Research topic selection","Literature review and methodology","Thesis writing and defense"]},{"heading":"Applications","text":"Applications vary based on research topic, including AI, algorithms, or systems.","bullets":["AI research","Algorithm development","Systems research"]}]},"meta":{"keywords":["M.S. thesis","independent research","computer science"],"tags":["PG","thesis","CSE"]}}
{"id":"ESC111/2","type":"course","department":"Computer Science and Engineering","title":"Fundamentals of Computing - I/II","summary":"Introduces fundamental computing concepts and programming.","credits":12,"content":{"description":"This course introduces fundamental computing concepts, including programming, algorithms, and problem-solving. It includes lectures, labs, and tutorials covering basic programming in languages like C or Python.","bullets":["Covers basic programming","Explores algorithms and problem-solving","Includes lab and tutorial components"],"sections":[{"heading":"Core Topics","text":"Focuses on foundational computing and programming skills.","bullets":["Introduction to programming (C/Python)","Basic algorithms and data structures","Problem-solving techniques"]},{"heading":"Lab Component (ESC111/2 (L))","text":"Practical programming exercises to reinforce lecture concepts.","bullets":["Hands-on coding assignments","Debugging and testing","Implementation of basic algorithms"]},{"heading":"Tutorial Component (ESC111/2 (T))","text":"Interactive sessions to deepen understanding of computing concepts.","bullets":["Problem-solving discussions","Algorithm walkthroughs","Coding practice sessions"]},{"heading":"Applications","text":"Applications include software development and computational thinking.","bullets":["Basic software development","Computational problem-solving","Programming for automation"]}]},"meta":{"keywords":["programming","algorithms","computational thinking"],"tags":["UG","core","CSE"]}}
{"id":"ESO207","type":"course","department":"Computer Science and Engineering","title":"Data Structures and Algorithms","summary":"Covers fundamental data structures and algorithm design.","credits":12,"content":{"description":"This course covers fundamental data structures and algorithms, including arrays, linked lists, trees, graphs, and sorting techniques. It emphasizes efficient algorithm design and analysis.","bullets":["Covers arrays, linked lists, and trees","Explores sorting and graph algorithms","Includes algorithm analysis"],"sections":[{"heading":"Core Topics","text":"Focuses on fundamental data structures and algorithm design.","bullets":["Arrays, linked lists, and stacks","Trees and graph algorithms","Sorting and searching techniques"]},{"heading":"Applications","text":"Applications include software development and system optimization.","bullets":["Efficient software design","System performance optimization","Algorithmic problem-solving"]}]},"meta":{"keywords":["data structures","algorithms","algorithm analysis"],"tags":["UG","core","CSE"]}}